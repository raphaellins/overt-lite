{"version":3,"sources":["util/auth.js","util/Proxy.tsx","App.tsx","serviceWorker.ts","pages/Login/LoginStyle.tsx","pages/Login/Login.tsx","pages/Account/AccountStyle.tsx","pages/Account/Account.tsx","pages/Lottery/LotteryStyle.tsx","elements/GameStatus.tsx","elements/GameCarrousel/GameCarrouselStyle.tsx","elements/GameCarrousel/GameCarrousel.tsx","pages/Lottery/Lottery.tsx","pages/Game/GameStyle.tsx","pages/Game/Game.tsx","pages/Draw/DrawStyle.tsx","pages/Draw/Draw.tsx","index.tsx"],"names":["authMiddleWare","history","localStorage","getItem","push","urlBase","authToken","axios","defaults","headers","common","Authorization","loginSystem","userData","onError","a","post","catch","error","listAllGamesMatched","get","newDraw","drawData","deleteDraw","drawId","delete","listAllDraws","newGame","gameData","deleteGame","gameId","listAllGames","GetUser","App","state","render","firstName","lastName","profilePicture","uiLoading","imageLoading","logoutHandler","event","removeItem","props","setState","left","loadPage","page","componentWillMount","response","data","userCredentials","email","phoneNumber","country","username","errorMsg","toggleDrawer","anchor","open","type","key","classes","this","className","container","CircularProgress","size","uiProgess","root","CssBaseline","AppBar","position","appBar","Toolbar","Button","onClick","Typography","variant","noWrap","Drawer","drawer","onClose","paper","drawerPaper","toolbar","List","ListItem","button","ListItemText","primary","children","Component","withStyles","theme","createStyles","zIndex","width","flexShrink","Index","height","paddingRight","paddingLeft","mixins","withRouter","Boolean","window","location","hostname","match","styles","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","customError","color","fontSize","progess","login","handleChange","target","name","value","handleSubmit","preventDefault","loading","password","errors","console","log","setItem","token","nextProps","UI","Container","component","maxWidth","Avatar","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","helperText","onChange","disabled","general","content","flexGrow","padding","details","locationText","buttonProperty","top","uploadButton","marginLeft","submitButton","account","status","buttonLoading","imageError","rest","Card","clsx","CardContent","gutterBottom","progress","Divider","Grid","item","md","xs","CardActions","justifyContent","matchedTitle","line","marginBottom","GameStatus","game","handleDelete","plusAction","cardHeader","title","gameNumber","gameDescription","countMatched","buttonAction","IconButton","aria-label","numbers","numbersPlayed","map","ballNumber","index","ball","numbersState","checked","ballChecked","fontWeight","pos","borderRadius","marginRight","ballMatched","GameCarrousel","initiateState","count","rowsPerPage","handleChangePage","prepareDate","handleChangeRowsPerPage","pageChanged","rowsPerPageChanged","games","gameScreen","i","gamesScreen","setTimeout","length","TablePagination","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","Lottery","initiate","retrievedData","gameQueued","gameFinished","gameFinishedScreen","gameQueuedScreen","retrieveData","gamesQueued","gamesFinished","_","filter","numbersDrawn","sortBy","reverse","ballScenario","ballsMatched","some","matched","border","cursor","formInput","ballsNumbers","inputField","background","boxShadow","shadows","modalStyle","transform","inputsGameNumber","Game","initialGameNumber","finalGameNumber","gameNumberDuplicate","gameToDuplicate","undefined","ballsNumber","ballsSelected","initialNumber","Number","finalNumber","isNaN","newGameRequest","onClickBall","currentChange","currentBalls","forEach","allGames","apply","handleDuplicate","modalState","duplicateGame","modalOpened","inputProps","maxLength","Modal","aria-labelledby","aria-describedby","join","bullet","NewDraw","handleDateChange","date","drawDate","drawNumber","Date","newDrawRequest","allDraws","drawsQueued","draw","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","ReactDOM","exact","path","Login","Account","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.a55302d9.chunk.js","sourcesContent":["export const authMiddleWare = (history) => {\n    const authToken = localStorage.getItem('AuthToken');\n    if(authToken === null){\n        history.push('/login')\n    }\n}","\nimport axios from 'axios';\nimport { User } from '../interfaces/UserState';\n\nconst urlBase = () => {\n    const authToken = localStorage.getItem('AuthToken');\n    axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n    return \"https://us-central1-overtlite.cloudfunctions.net/api\";\n}\n\nexport const loginSystem = async (userData: User, onError: Function) => {\n    return await axios\n        .post(`${urlBase()}/login`, userData)\n        .catch((error) => onError(error) );\n}\n\nexport const listAllGamesMatched = async () => {\n    return await axios.get(`${urlBase()}/games`);\n}\n\nexport const newDraw = async (drawData: any) => {\n    return await axios\n        .post(`${urlBase()}/new-draw`, drawData)\n}\n\nexport const deleteDraw = async (drawId: string |  undefined) => {\n    return await axios.delete(`${urlBase()}/draw/${drawId}`)\n}\n\nexport const listAllDraws = async () => {\n    return await axios.get(`${urlBase()}/draws-all`)\n}\n\nexport const newGame = async (gameData: any) => {\n    return await axios\n        .post(`${urlBase()}/new-game`, gameData);\n}\n\nexport const deleteGame = async (gameId: string | undefined) => {\n    return await axios.delete(`${urlBase()}/game/${gameId}`);\n}\n\nexport const listAllGames = async () => {\n    return await axios.get(`${urlBase()}/games-all`);\n}\n\nexport const GetUser = async () => {\n    return await axios.get(`${urlBase()}/user`);\n}","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { authMiddleWare } from './util/auth'\nimport { Theme, createStyles, Button } from '@material-ui/core';\nimport { withRouter, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport { GetUser } from './util/Proxy';\n\nconst styles = (theme: Theme) => (\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: 240,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: 240\n    },\n    uiProgess: {\n      Index: '1000',\n      height: '31px',\n      width: '31px',\n    },\n    container: {\n      paddingRight: 10,\n      paddingLeft:10\n    },\n    toolbar: theme.mixins.toolbar\n  }));\n\ninterface IState {\n  firstName?: String,\n  lastName?: String,\n  profilePicture?: String,\n  uiLoading?: boolean,\n  imageLoading?: boolean,\n  render?: boolean,\n  email?: String,\n  phoneNumber?: String,\n  country?: String,\n  username?: String,\n  errorMsg?: String,\n  left?: boolean\n}\n\ntype PropsType = RouteComponentProps & {\n  history?: Array<String>;\n  classes: any;\n  children: any;\n}\n\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\n\nclass App extends Component<PropsType, IState, RouteProps> {\n  state: IState = {\n    render: true,\n    firstName: '',\n    lastName: '',\n    profilePicture: '',\n    uiLoading: true,\n    imageLoading: false\n  };\n\n  logoutHandler = (event: any) => {\n    localStorage.removeItem('AuthToken');\n    this.props.history?.push('/login');\n\n    this.setState({ left: false });\n  };\n\n  loadPage = (page: string) => {\n    this.props.history?.push(page)\n    this.setState({ left: false });\n  }\n\n  componentWillMount = async () => {\n    authMiddleWare(this.props.history);\n\n    try {\n      const response = await GetUser();\n\n      if (response && response.data) {\n        this.setState({\n          firstName: response.data.userCredentials.firstName,\n          lastName: response.data.userCredentials.lastName,\n          email: response.data.userCredentials.email,\n          phoneNumber: response.data.userCredentials.phoneNumber,\n          country: response.data.userCredentials.country,\n          username: response.data.userCredentials.username,\n          uiLoading: false\n        });\n      }\n\n    } catch (error) {\n      localStorage.removeItem('AuthToken');\n      this.props.history?.push('/login');\n      this.setState({ errorMsg: 'Error in retrieving the data', uiLoading: false });\n    }\n  };\n\n  toggleDrawer = (anchor: Anchor, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    this.setState({ ...this.state, [anchor]: open })\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { left, username } = this.state;\n    if (this.state.uiLoading === true) {\n      return (\n        <div className={classes.container}>\n          {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.root} >\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <Button onClick={this.toggleDrawer(\"left\", true)}>Menu</Button>\n              <Typography variant=\"h6\" noWrap>\n                Overt Lite\n\t\t\t\t\t\t\t</Typography>\n            </Toolbar>\n          </AppBar>\n\n          <Drawer\n            className={classes.drawer}\n            anchor=\"left\"\n            open={left}\n            onClose={() =>  this.toggleDrawer('left', false)}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.toolbar} />\n            <List>\n              <ListItem button key=\"Lottery\" onClick={() => this.loadPage(\"/\")}>\n                <ListItemText primary=\"Lottery\" />\n              </ListItem>\n              <ListItem button key=\"NewDraw\" onClick={() => this.loadPage(\"/draw\")}>\n                <ListItemText primary=\"New Draw\" />\n              </ListItem>\n              <ListItem button key=\"NewGame\" onClick={() => this.loadPage(\"/game\")}>\n                <ListItemText primary=\"New Game\" />\n              </ListItem>\n              <ListItem button key=\"Account\" onClick={() => this.loadPage(\"/account\")}>\n                <ListItemText primary=\"Account\" />\n              </ListItem>\n              <ListItem button key=\"Logout\" onClick={this.logoutHandler}>\n                <ListItemText primary=\"Logout\" />\n              </ListItem>\n            </List>\n          </Drawer>\n          <div className={classes.container}>\n            {this.props.children}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(withRouter(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Theme, createStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => (\n    createStyles({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main\n        },\n        form: {\n            width: '100%',\n            marginTop: theme.spacing(1)\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2)\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        progess: {\n            position: 'absolute'\n        }\n    }));\n\nexport default styles","import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { loginSystem } from '../../util/Proxy';\nimport { IUserProps, IUserState, User } from '../../interfaces/UserState';\nimport styles from './LoginStyle';\n\nclass login extends Component<IUserProps, IUserState> {\n\tconstructor(props: IUserProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\terrors: {},\n\t\t\tloading: false\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps: any) {\n\t\tif (nextProps?.UI?.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.UI.errors\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = async (event: { preventDefault: () => void; }) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ loading: true });\n\t\tconst userData: User = {\n\t\t\temail: this.state.email ? this.state.email : '',\n\t\t\tpassword: this.state.password ? this.state.password : ''\n\t\t};\n\n\t\tconst response = await loginSystem(userData, (error: any) => {\n\n\t\t\tif (error.response != null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\terrors: error.response.data,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconsole.log(error);\n\t\t});\n\n\t\tif (response != null) {\n\t\t\tlocalStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { errors, loading } = this.state;\n\t\treturn (\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\thelperText={errors?.email}\n\t\t\t\t\t\t\terror={errors?.email ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\thelperText={errors?.password}\n\t\t\t\t\t\t\terror={errors?.password ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\tdisabled={loading || !this.state.email || !this.state.password}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{errors?.general && (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" className={classes.customError}>\n\t\t\t\t\t\t\t\t{errors?.general}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(login);","import { createStyles, Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3)\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {},\n        details: {\n            display: 'flex'\n        },\n        avatar: {\n            height: 110,\n            width: 100,\n            flexShrink: 0,\n            flexGrow: 0\n        },\n        locationText: {\n            paddingLeft: '15px'\n        },\n        buttonProperty: {\n            position: 'absolute',\n            top: '50%'\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        progess: {\n            position: 'absolute'\n        },\n        uploadButton: {\n            marginLeft: '8px',\n            margin: theme.spacing(1)\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        submitButton: {\n            marginTop: '10px'\n        }\n    }));\n\nexport default styles;","import React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Card, CardActions, CardContent, Divider, Grid, TextField } from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { authMiddleWare } from '../../util/auth';\nimport { GetUser } from '../../util/Proxy';\nimport { IAccountState, IAccountProps } from '../../interfaces/AccountState';\nimport styles from './AccountStyle';\n\nclass account extends Component<IAccountProps, IAccountState> {\n\tconstructor(props: IAccountProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\temail: '',\n\t\t\tphoneNumber: '',\n\t\t\tusername: '',\n\t\t\tcountry: '',\n\t\t\tprofilePicture: '',\n\t\t\tuiLoading: true,\n\t\t\tbuttonLoading: false,\n\t\t\timageError: ''\n\t\t};\n\t}\n\n\tcomponentWillMount = async () => {\n\t\tauthMiddleWare(this.props.history);\n\n\t\ttry {\n\t\t\tconst response = await GetUser();\n\n\t\t\tthis.setState({\n\t\t\t\tfirstName: response.data.userCredentials.firstName,\n\t\t\t\tlastName: response.data.userCredentials.lastName,\n\t\t\t\temail: response.data.userCredentials.email,\n\t\t\t\tphoneNumber: response.data.userCredentials.phoneNumber,\n\t\t\t\tcountry: response.data.userCredentials.country,\n\t\t\t\tusername: response.data.userCredentials.username,\n\t\t\t\tuiLoading: false\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error.response.status === 403) {\n\t\t\t\tthis.props.history?.push('/login');\n\t\t\t}\n\t\t\tthis.setState({ errorMsg: 'Error in retrieving the data' });\n\t\t}\n\n\t};\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes, ...rest } = this.props;\n\t\tif (this.state.uiLoading === true) {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t{this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n\t\t\t\t</main>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.locationText} gutterBottom variant=\"h4\">\n\t\t\t\t\t\t\t\t\t\t{this.state.firstName} {this.state.lastName}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.progress} />\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<form autoComplete=\"off\" noValidate>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.firstName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.lastName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"userHandle\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"country\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.country}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardActions />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Card>\n\t\t\t\t</main>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default withStyles(styles)(account);","import { Theme, createStyles } from \"@material-ui/core\";\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        root: {\n            marginTop: 10,\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n        },\n        matchedTitle: {\n            fontSize: 18,\n            color: 'green'\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        toolbar: theme.mixins.toolbar,\n        line: {\n            marginBottom: 50,\n            marginTop: 50,\n            color: 'gray'\n        },\n    }))\n);\n\nexport default styles;","import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, createStyles, IconButton } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from '@material-ui/core/Grid';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IGameStatusProps, IGameStatusState } from '../interfaces/GameStatusState';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        toolbar: theme.mixins.toolbar,\n        root: {\n            marginBottom: 10\n        },\n        title: {\n            fontSize: 18,\n        },\n        matchedTitle: {\n            fontSize: 18,\n            color: 'green',\n            fontWeight: 'bold'\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'orange',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n        },\n        ballMatched: {\n            backgroundColor: 'green',\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        cardHeader: {\n            marginBottom: 10\n        },\n        buttonAction: {\n\n        }\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n    game: IGame;\n    handleDelete: Function;\n    plusAction?: Function;\n}\n\ninterface IState {\n    email?: String;\n    password?: String;\n    errors?: Error;\n    loading?: boolean;\n    retrievedData?: IGame[],\n    gameFinished?: IGame[],\n    gameQueued?: IGame[]\n}\n\ninterface IGame {\n    gameNumber?: string,\n    numbersPlayed: string[],\n    numbersDrawn?: string[],\n    numbersState?: IBallState[],\n    gameId?: string,\n    countMatched?: number,\n    ballsMatched?: string[],\n    gameDescription?: string,\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\nclass GameStatus extends Component<IGameStatusProps, IGameStatusState> {\n\n    render() {\n        const { classes, game, handleDelete, plusAction } = this.props;\n        return (\n\n            <Card className={classes.root} key={game.gameId}>\n                <CardContent>\n                    <Grid container spacing={4} className={classes.cardHeader}>\n                        <Grid item xs>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Game: {game.gameNumber}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs>\n                            {\n                                game.gameDescription ?\n                                    (\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                            {game.gameDescription}\n                                        </Typography>\n                                    ) : ''\n                            }\n                        </Grid>\n                        <Grid item xs>\n                            {\n                                game.countMatched ?\n                                    (\n                                        <Typography className={game.countMatched >= 11 ? classes.matchedTitle : classes.title} color=\"textSecondary\" gutterBottom>\n                                            Matched: {game.countMatched}\n                                        </Typography>\n                                    )\n                                    : ''\n                            }\n\n\n                        </Grid>\n                        <Grid className={classes.buttonAction}>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => handleDelete(game)}>\n                                <DeleteIcon />\n                            </IconButton>\n                            {\n                                plusAction ?\n                                    (\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => plusAction(game)}>\n                                            <RefreshIcon />\n                                        </IconButton>\n                                    )\n                                    : ''\n                            }\n                        </Grid>\n                    </Grid>\n\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                        {\n                            game.numbersPlayed.map((ballNumber: string, index: number) => {\n                                return (<span className={classes.ball} key={game.gameId + ballNumber}>{ballNumber}</span>)\n                            })\n                        }\n                    </Typography>\n\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                        {\n                            game.numbersState?.map((ballNumber: IBallState, index: number) => {\n                                return (<span className={ballNumber.checked ? classes.ballChecked : classes.ball} key={game.gameId + ballNumber.value}>{ballNumber.value}</span>)\n                            })\n                        }\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n\n}\n\nexport default (withStyles(styles)(GameStatus));","import { Theme, createStyles } from \"@material-ui/core\";\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        root: {\n            marginTop: 10\n        },\n        matchedTitle: {\n            fontSize: 18,\n            color: 'green'\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        toolbar: theme.mixins.toolbar,\n        line: {\n            marginBottom: 50,\n            marginTop: 50,\n            color: 'gray'\n        },\n    }))\n);\n\nexport default styles;","import { IGameCarrouselState, IGameCarrouselProps } from \"../../interfaces/GameCarrouselState\";\nimport { Component } from \"react\";\nimport { TablePagination, withStyles } from \"@material-ui/core\";\nimport { IGame } from \"../../interfaces/LotteryState\";\nimport GameStatus from \"../GameStatus\";\nimport styles from \"./GameCarrouselStyle\";\nimport React from \"react\";\n\nclass GameCarrousel extends Component<IGameCarrouselProps, IGameCarrouselState> {\n\n    initiateState = () => {\n        this.setState({\n            count: 0,\n            rowsPerPage: 2,\n            page: 0\n        });\n    }\n\n    componentWillMount() {\n        this.initiateState();\n\n        setTimeout(() => {\n            this.setState({ count: this.props.games.length })\n            this.prepareDate(0);\n        }, 1000);\n\n    }\n\n    handleChangePage = (event: any, value: number) => {\n        const { rowsPerPage } = this.state;\n        this.prepareDate(value, rowsPerPage);\n    }\n\n    handleChangeRowsPerPage = (event: any) => {\n        const { page } = this.state;\n\n        this.prepareDate(page, event.target.value)\n    }\n\n    prepareDate = (pageChanged: number, rowsPerPageChanged: number = 2) => {\n        let { count } = this.state;\n        const { games } = this.props;\n\n        let gameScreen: IGame[] = [];\n        let index = pageChanged;\n\n        if (pageChanged > 0) {\n            index = rowsPerPageChanged * pageChanged;\n        }\n\n        for (let i = index; i < rowsPerPageChanged * (pageChanged + 1) && i < count; i++) {\n            gameScreen.push(games[i])\n        }\n\n        this.setState({ ...this.state, gamesScreen: gameScreen, page: pageChanged, rowsPerPage: rowsPerPageChanged })\n    }\n\n    render() {\n        const { handleDelete, classes } = this.props;\n        const { count, page, rowsPerPage, gamesScreen } = this.state;\n        return (<div>\n             <div className={classes.toolbar} />\n            {\n                gamesScreen?.map((game: IGame) => {\n                    return (\n                        <GameStatus key={game.gameId} game={game} handleDelete={handleDelete}></GameStatus>\n                    )\n                })\n            }\n\n            <TablePagination\n                component=\"div\"\n                count={count}\n                page={page}\n                onChangePage={this.handleChangePage}\n                rowsPerPage={rowsPerPage}\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                rowsPerPageOptions={[2, 5]}\n            />\n        </div>\n        )\n    }\n}\n\n\nexport default (withStyles(styles)(GameCarrousel));","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { CircularProgress } from '@material-ui/core';\nimport * as _ from 'lodash';\nimport { listAllGamesMatched, deleteGame } from '../../util/Proxy';\nimport { ILotteryState, ILotteryProps, IGame } from '../../interfaces/LotteryState';\nimport { IBallState } from '../../interfaces/GameStatusState';\nimport styles from './LotteryStyle';\nimport GameCarrousel from '../../elements/GameCarrousel/GameCarrousel';\n\nclass Lottery extends Component<ILotteryProps, ILotteryState> {\n\n    initiate = () => {\n        this.setState({\n            retrievedData: [],\n            gameQueued: [],\n            gameFinished: [],\n            gameFinishedScreen: [],\n            gameQueuedScreen: []\n        })\n    }\n\n    componentWillMount = async () => {\n        this.retrieveData();\n        this.initiate();\n    }\n\n    retrieveData = async () => {\n        let gamesQueued: Array<IGame> = [];\n        let gamesFinished: Array<IGame> = [];\n\n        try {\n\n            const { data } = await listAllGamesMatched();\n\n            gamesFinished = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length > 0)\n                .sortBy('gameNumber')\n                .reverse()\n                .value();\n\n            gamesFinished = gamesFinished.map((game: IGame) => {\n                let ballScenario: Array<IBallState> = []\n\n                game.numbersDrawn.map((value: string) => {\n                    ballScenario.push({\n                        checked: game.ballsMatched?.some((matched: string) => matched === value),\n                        value: value\n                    })\n\n                    return value;\n                })\n\n                return {\n                    ...game,\n                    numbersState: ballScenario\n                }\n            });\n\n            gamesQueued = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length === 0)\n                .sortBy('gameNumber')\n                .value();\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ gameFinished: gamesFinished, gameQueued: gamesQueued });\n    }\n\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n\n            await deleteGame(game.gameId)\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameFinished, gameQueued } = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main className={classes.root}>\n                   \n\n                    <GameCarrousel games={gameQueued} handleDelete={this.handleDelete}></GameCarrousel>\n\n                    <GameCarrousel games={gameFinished} handleDelete={this.handleDelete}></GameCarrousel>\n                </main>)\n        }\n    }\n}\n\nexport default (withStyles(styles)(Lottery));","import { createStyles, Theme } from \"@material-ui/core\";\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        root: {\n            marginBottom: 10,\n            marginTop: 10,\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        toolbar: theme.mixins.toolbar,\n        modalStyle: {\n            top: '50%',\n            left: '50%',\n            transform: \"translate(-50%, -50%)\"\n        },\n        inputsGameNumber:{\n            display: 'flex',\n            flexDirection: 'column',\n            marginBottom: 10,\n            maxWidth: 200\n        }\n    }))\n);\n\nexport default styles;","import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TextField, Button, IconButton, CircularProgress, Modal } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport * as _ from 'lodash';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { newGame, listAllGames, deleteGame } from '../../util/Proxy';\nimport GameStatus from '../../elements/GameStatus';\nimport { IGameState, IGameProps, IGame } from '../../interfaces/GameState';\nimport { IBallState } from '../../interfaces/GameStatusState';\nimport styles from './GameStyle';\n\nclass Game extends Component<IGameProps, IGameState> {\n    constructor(props: IGameProps) {\n        super(props);\n\n        this.state = this.initiateState();\n    }\n\n    initiateState = () => {\n        return {\n            loading: false,\n            initialGameNumber: '',\n            finalGameNumber: '',\n            gameNumberDuplicate: '',\n            gameDescription: '',\n            gameToDuplicate: undefined,\n            ballsNumber: [\n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n        };\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n\n        const { initialGameNumber, finalGameNumber, ballsNumber, gameDescription } = this.state;\n\n        const ballsSelected = ballsNumber?.filter((ball: IBallState) => ball.checked);\n\n        const initialNumber = Number(initialGameNumber);\n        const finalNumber = Number(finalGameNumber);\n\n        if (isNaN(initialNumber) || initialNumber === 0\n            || isNaN(finalNumber) || finalNumber === 0) {\n            this.setState({ errors: ['Initial and final game number is required'], loading: false })\n            return;\n        }\n\n        var newGameRequest = {\n            initialGameNumber,\n            finalGameNumber,\n            gameDescription,\n            numbersPlayed: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        try {\n            this.setState({ loading: true });\n\n            await newGame(newGameRequest);\n\n            await this.retrieveData();\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n\n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball: IBallState) => ball.checked);\n\n        if (ballsSelected && ballsSelected?.length === 15 && currentChange) {\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if (ball.value === ballNumber.value) {\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ ballsNumber: currentBalls });\n    }\n\n    handleChange = (event: any) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            errors: []\n        });\n    };\n\n    componentWillMount = async () => {\n        this.setState({ loading: true });\n        await this.retrieveData();\n\n        const { retrievedData } = this.state;\n\n        retrievedData?.forEach((game: IGame, index: number) => {\n            const gameNumber = game.gameNumber ?? 0;\n            if (gameNumber > 1980) {\n                return\n            }\n\n            setTimeout(async () => {\n                await deleteGame(game.gameId)\n            }, 10000 * index)\n        })\n\n\n        this.setState({ loading: false });\n    }\n\n    retrieveData = async () => {\n        let allGames: Array<IGame> = [];\n\n        try {\n\n            const { data } = await listAllGames();\n\n            const gamesQueued: IGame[] = _.chain(data)\n                .sortBy('gameNumber')\n                .value();\n\n            allGames.push.apply(allGames, gamesQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allGames });\n    }\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n\n            await deleteGame(game.gameId);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    handleDuplicate = async (game: IGame) => {\n        this.setState({ gameToDuplicate: game });\n\n        this.modalState(true);\n    }\n\n    duplicateGame = async () => {\n        this.setState({ loading: true });\n\n        try {\n            const { gameToDuplicate, gameNumberDuplicate } = this.state;\n\n            if (gameToDuplicate == null) {\n                return;\n            }\n\n            var newGameRequest = {\n                initialGameNumber: gameNumberDuplicate,\n                finalGameNumber: gameNumberDuplicate,\n                gameDescription: gameToDuplicate.gameDescription,\n                numbersPlayed: gameToDuplicate.numbersPlayed\n            }\n\n            await newGame(newGameRequest);\n\n            await this.retrieveData();\n\n            this.modalState(false);\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n    }\n\n    modalState = async (state: boolean) => {\n        this.setState({ modalOpened: state, gameNumberDuplicate: '' });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameNumberDuplicate, loading, initialGameNumber, finalGameNumber, ballsNumber, errors, retrievedData, modalOpened, gameDescription } = this.state;\n\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main >\n                    <div className={classes.toolbar} />\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <form className={classes.formInput} noValidate autoComplete=\"off\">\n                                <div className={classes.inputsGameNumber}>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"initialGameNumber\"\n                                        id=\"initialGameNumber\"\n                                        label=\"Initial Game Number\"\n                                        value={initialGameNumber}\n                                        onChange={this.handleChange} />\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"finalGameNumber\"\n                                        id=\"finalGameNumber\"\n                                        label=\"Final Game Number\"\n                                        value={finalGameNumber}\n                                        onChange={this.handleChange} />\n                                        <TextField\n                                        name=\"gameDescription\"\n                                        id=\"gameDescription\"\n                                        label=\"Game Description\"\n                                        inputProps={{maxLength: 12}}\n                                        value={gameDescription}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div className={classes.inputField}>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index > 8)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 9 || index > 17)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 18)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </div>\n\n                                <div className={classes.inputField}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={loading}\n                                        onClick={this.handleSubmit}>\n                                        Save\n                                </Button>\n                                </div>\n                                <div className={classes.inputField}>\n                                    {(\n                                        <Typography variant=\"body2\" className={classes.customError}>\n                                            {errors}\n                                        </Typography>\n                                    )}\n                                </div>\n                            </form>\n\n                        </CardContent>\n                    </Card>\n                    {\n                        retrievedData?.map((game: IGame) => {\n                            return (\n                                <GameStatus key={game.gameId} game={game} handleDelete={this.handleDelete} plusAction={this.handleDuplicate}></GameStatus>\n                            )\n                        })\n                    }\n\n                    <Modal\n                        open={modalOpened ? modalOpened : false}\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                    >\n                        <div className={[classes.paper, classes.modalStyle].join(' ')}>\n\n                            <div>\n                                <TextField\n                                    type=\"number\"\n                                    name=\"gameNumberDuplicate\"\n                                    id=\"gameNumberDuplicate\"\n                                    label=\"Game Number\"\n                                    value={gameNumberDuplicate}\n                                    onChange={this.handleChange} />\n                            </div>\n\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.modalState(false)}>\n                                <CloseIcon />\n                            </IconButton>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.duplicateGame()}>\n                                <SaveIcon />\n                            </IconButton>\n                        </div>\n                    </Modal>\n                </main>\n            )\n        }\n\n\n\n\n    }\n}\n\nexport default (withStyles(styles)(Game));","import { createStyles, Theme } from \"@material-ui/core\";\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {\n            marginBottom: 10\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        inputsGameNumber: {\n            display: 'flex',\n            flexDirection: 'column',\n            marginBottom: 10,\n            maxWidth: 200\n        }\n    }))\n);\n\nexport default styles;","import React, { Component } from 'react'\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TextField, Button, CircularProgress } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport GameStatus from '../../elements/GameStatus';\nimport * as _ from 'lodash';\nimport { newDraw, listAllDraws, deleteDraw } from '../../util/Proxy';\nimport { IDrawState, IDrawProps, IDraw } from '../../interfaces/DrawState';\nimport { IBallState } from '../../interfaces/GameStatusState';\nimport styles from './DrawStyle';\n\nclass NewDraw extends Component<IDrawProps, IDrawState> {\n    constructor(props: IDrawProps) {\n        super(props);\n\n        this.state = this.initiateState();\n    }\n\n    handleDateChange = (date: Date | null) => {\n        this.setState({ drawDate: date });\n    };\n\n    initiateState = () => {\n        return {\n            loading: false,\n            drawNumber: '',\n            drawDate: new Date(),\n            ballsNumber: [\n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n        };\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n\n        const { drawNumber, drawDate, ballsNumber } = this.state;\n\n        if (drawNumber == null || Number(drawNumber) <= 0 || drawDate == null) {\n            this.setState({ errors: ['Inform the Game Number'] });\n\n            return;\n        }\n\n        this.setState({ loading: true });\n\n        const ballsSelected = ballsNumber?.filter((ball: IBallState) => ball.checked);\n\n        var newDrawRequest = {\n            drawNumber,\n            drawDate,\n            numbersDrawn: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        try {\n            await newDraw(newDrawRequest);\n\n            await this.retrieveData();\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball: IBallState) => ball.checked);\n\n        if (ballsSelected && ballsSelected?.length === 15 && currentChange) {\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if (ball.value === ballNumber.value) {\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ ballsNumber: currentBalls });\n    }\n\n    handleChange = (event: any) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        let allDraws: Array<IDraw> = [];\n\n        try {\n            const { data } = await listAllDraws();\n\n            const drawsQueued: IDraw[] = _.chain(data)\n                .sortBy('drawNumber')\n                .value();\n\n            allDraws.push.apply(allDraws, drawsQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allDraws });\n    }\n\n    handleDelete = async (draw: IDraw) => {\n        try {\n            this.setState({ loading: true });\n\n            await deleteDraw(draw.drawId);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loading, drawNumber, drawDate, ballsNumber, errors, retrievedData } = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <form className={classes.formInput} noValidate autoComplete=\"off\">\n                                <div className={classes.inputsGameNumber}>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"drawNumber\"\n                                        id=\"drawNumber\"\n                                        label=\"Draw Number\"\n                                        value={drawNumber}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <KeyboardDatePicker\n                                            disableToolbar\n                                            variant=\"inline\"\n                                            format=\"dd/MM/yyyy\"\n                                            margin=\"normal\"\n                                            id=\"date-picker-inline\"\n                                            label=\"Date picker inline\"\n                                            value={drawDate}\n                                            onChange={(value) => this.handleDateChange(value)}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change date',\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <div className={classes.inputField}>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index > 8)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 9 || index > 17)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 18)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </div>\n\n                                <div className={classes.inputField}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={loading}\n                                        onClick={this.handleSubmit}>\n                                        Save\n                            </Button>\n                                </div>\n                                <div className={classes.inputField}>\n                                    {(\n                                        <Typography variant=\"body2\" className={classes.customError}>\n                                            {errors}\n                                        </Typography>\n                                    )}\n                                </div>\n                            </form>\n\n                        </CardContent>\n                    </Card>\n\n                    {\n                        retrievedData?.map((game: IDraw) => {\n                            return (\n                                <GameStatus key={game.drawId} game={{ gameId: game.drawId, gameNumber: game.drawNumber, numbersPlayed: game.numbersDrawn }} handleDelete={this.handleDelete}></GameStatus>\n                            )\n                        })\n                    }\n                </main>\n            )\n        }\n    }\n}\n\nexport default (withStyles(styles)(NewDraw));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login/Login';\nimport Account from './pages/Account/Account';\nimport Lottery from './pages/Lottery/Lottery';\nimport Game from './pages/Game/Game';\nimport NewDraw from './pages/Draw/Draw';\n\nReactDOM.render(\n  (\n    <Router>\n      <App>\n        <Switch>\n          <Route exact path=\"/\" component={Lottery} />\n          <Route exact path=\"/game\" component={Game} />\n          <Route exact path=\"/draw\" component={NewDraw} />\n          <Route  exact path=\"/login\" component={Login} />\n          <Route  exact path=\"/account\" component={Account} />\n        </Switch>\n      </App>\n    </Router>\n  ),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}