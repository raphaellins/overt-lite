{"version":3,"sources":["util/auth.js","util/Proxy.tsx","App.tsx","serviceWorker.ts","pages/Login/LoginStyle.tsx","pages/Login/Login.tsx","pages/Account/AccountStyle.tsx","pages/Account/Account.tsx","elements/GameStatus.tsx","pages/Lottery/LotteryStyle.tsx","pages/Lottery/Lottery.tsx","pages/Game/GameStyle.tsx","pages/Game/Game.tsx","pages/Draw/DrawStyle.tsx","pages/Draw/Draw.tsx","index.tsx"],"names":["authMiddleWare","history","localStorage","getItem","push","urlBase","authToken","axios","defaults","headers","common","Authorization","loginSystem","userData","onError","a","post","catch","error","listAllGamesMatched","get","newDraw","drawData","deleteDraw","drawId","delete","listAllDraws","newGame","gameData","deleteGame","gameId","listAllGames","GetUser","App","state","render","firstName","lastName","profilePicture","uiLoading","imageLoading","logoutHandler","event","removeItem","props","setState","left","loadPage","page","console","log","componentWillMount","response","data","userCredentials","email","phoneNumber","country","username","errorMsg","toggleDrawer","anchor","open","type","key","classes","this","className","container","CircularProgress","size","uiProgess","root","CssBaseline","AppBar","position","appBar","Toolbar","Button","onClick","Typography","variant","noWrap","Drawer","drawer","onClose","paper","drawerPaper","toolbar","List","ListItem","button","ListItemText","primary","children","Component","withStyles","theme","createStyles","zIndex","width","flexShrink","Index","height","display","alignItems","justifyContent","flexDirection","mixins","withRouter","Boolean","window","location","hostname","match","styles","marginTop","spacing","avatar","margin","backgroundColor","palette","secondary","main","form","submit","customError","color","fontSize","progess","login","handleChange","target","name","value","handleSubmit","preventDefault","loading","password","errors","setItem","token","nextProps","UI","Container","component","maxWidth","Avatar","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","helperText","onChange","disabled","general","content","flexGrow","padding","details","locationText","paddingLeft","buttonProperty","top","uploadButton","marginLeft","submitButton","account","status","buttonLoading","imageError","rest","Card","clsx","CardContent","gutterBottom","progress","Divider","Grid","item","md","xs","CardActions","GameStatus","game","handleDelete","plusAction","cardHeader","title","gameNumber","gameDescription","countMatched","matchedTitle","buttonAction","IconButton","aria-label","numbers","numbersPlayed","map","ballNumber","index","ball","numbersState","checked","ballChecked","marginBottom","fontWeight","pos","borderRadius","marginRight","ballMatched","line","Lottery","retrieveData","gamesQueued","gamesFinished","_","filter","numbersDrawn","length","sortBy","reverse","ballScenario","ballsMatched","some","matched","gameFinished","gameQueued","border","cursor","formInput","ballsNumbers","inputField","background","boxShadow","shadows","modalStyle","transform","inputsGameNumber","Game","initiateState","initialGameNumber","finalGameNumber","gameNumberDuplicate","gameToDuplicate","undefined","ballsNumber","ballsSelected","initialNumber","Number","finalNumber","isNaN","newGameRequest","onClickBall","currentChange","currentBalls","forEach","retrievedData","setTimeout","allGames","apply","handleDuplicate","modalState","duplicateGame","modalOpened","inputProps","maxLength","Modal","aria-labelledby","aria-describedby","join","bullet","NewDraw","handleDateChange","date","drawDate","drawNumber","Date","newDrawRequest","allDraws","drawsQueued","draw","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","ReactDOM","exact","path","Login","Account","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.364e9a05.chunk.js","sourcesContent":["export const authMiddleWare = (history) => {\n    const authToken = localStorage.getItem('AuthToken');\n    if(authToken === null){\n        history.push('/login')\n    }\n}","\nimport axios from 'axios';\nimport { User } from '../interfaces/UserState';\n\nconst urlBase = () => {\n    const authToken = localStorage.getItem('AuthToken');\n    axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n    return \"https://us-central1-overtlite.cloudfunctions.net/api\";\n}\n\nexport const loginSystem = async (userData: User, onError: Function) => {\n    return await axios\n        .post(`${urlBase()}/login`, userData)\n        .catch((error) => onError(error) );\n}\n\nexport const listAllGamesMatched = async () => {\n    return await axios.get(`${urlBase()}/games`);\n}\n\nexport const newDraw = async (drawData: any) => {\n    return await axios\n        .post(`${urlBase()}/new-draw`, drawData)\n}\n\nexport const deleteDraw = async (drawId: string |  undefined) => {\n    return await axios.delete(`${urlBase()}/draw/${drawId}`)\n}\n\nexport const listAllDraws = async () => {\n    return await axios.get(`${urlBase()}/draws-all`)\n}\n\nexport const newGame = async (gameData: any) => {\n    return await axios\n        .post(`${urlBase()}/new-game`, gameData);\n}\n\nexport const deleteGame = async (gameId: string | undefined) => {\n    return await axios.delete(`${urlBase()}/game/${gameId}`);\n}\n\nexport const listAllGames = async () => {\n    return await axios.get(`${urlBase()}/games-all`);\n}\n\nexport const GetUser = async () => {\n    return await axios.get(`${urlBase()}/user`);\n}","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { authMiddleWare } from './util/auth'\nimport { Theme, createStyles, Button } from '@material-ui/core';\nimport { withRouter, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport { GetUser } from './util/Proxy';\n\nconst styles = (theme: Theme) => (\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: 240,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: 240\n    },\n    uiProgess: {\n      Index: '1000',\n      height: '31px',\n      width: '31px',\n    },\n    container: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    toolbar: theme.mixins.toolbar\n  }));\n\ninterface IState {\n  firstName?: String,\n  lastName?: String,\n  profilePicture?: String,\n  uiLoading?: boolean,\n  imageLoading?: boolean,\n  render?: boolean,\n  email?: String,\n  phoneNumber?: String,\n  country?: String,\n  username?: String,\n  errorMsg?: String,\n  left?: boolean\n}\n\ntype PropsType = RouteComponentProps & {\n  history?: Array<String>;\n  classes: any;\n  children: any;\n}\n\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\n\nclass App extends Component<PropsType, IState, RouteProps> {\n  state: IState = {\n    render: true,\n    firstName: '',\n    lastName: '',\n    profilePicture: '',\n    uiLoading: true,\n    imageLoading: false\n  };\n\n  logoutHandler = (event: any) => {\n    localStorage.removeItem('AuthToken');\n    this.props.history?.push('/login');\n\n    this.setState({ left: false });\n  };\n\n  loadPage = (page: string) => {\n    this.props.history?.push(page)\n    this.setState({ left: false });\n    console.log(page);\n  }\n\n  componentWillMount = async () => {\n    authMiddleWare(this.props.history);\n\n    try {\n      const response = await GetUser();\n\n      if (response && response.data) {\n        this.setState({\n          firstName: response.data.userCredentials.firstName,\n          lastName: response.data.userCredentials.lastName,\n          email: response.data.userCredentials.email,\n          phoneNumber: response.data.userCredentials.phoneNumber,\n          country: response.data.userCredentials.country,\n          username: response.data.userCredentials.username,\n          uiLoading: false\n        });\n      }\n\n    } catch (error) {\n      localStorage.removeItem('AuthToken');\n      this.props.history?.push('/login');\n      this.setState({ errorMsg: 'Error in retrieving the data', uiLoading: false });\n    }\n  };\n\n  toggleDrawer = (anchor: Anchor, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    this.setState({ ...this.state, [anchor]: open })\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { left } = this.state;\n    if (this.state.uiLoading === true) {\n      return (\n        <div className={classes.container}>\n          {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.root} >\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <Button onClick={this.toggleDrawer(\"left\", true)}>Menu</Button>\n              <Typography variant=\"h6\" noWrap>\n                Overt Lite\n\t\t\t\t\t\t\t</Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            anchor=\"left\"\n            open={left}\n            onClose={() => this.toggleDrawer('left', false)}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.toolbar} />\n            <List>\n              <ListItem button key=\"Lottery\" onClick={() => this.loadPage(\"/\")}>\n                <ListItemText primary=\"Lottery\" />\n              </ListItem>\n              <ListItem button key=\"NewDraw\" onClick={() => this.loadPage(\"/draw\")}>\n                <ListItemText primary=\"New Draw\" />\n              </ListItem>\n              <ListItem button key=\"NewGame\" onClick={() => this.loadPage(\"/game\")}>\n                <ListItemText primary=\"New Game\" />\n              </ListItem>\n              <ListItem button key=\"Account\" onClick={() => this.loadPage(\"/account\")}>\n                <ListItemText primary=\"Account\" />\n              </ListItem>\n              <ListItem button key=\"Logout\" onClick={this.logoutHandler}>\n                <ListItemText primary=\"Logout\" />\n              </ListItem>\n            </List>\n          </Drawer>\n          <div className={classes.container}>\n            {this.props.children}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(withRouter(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Theme, createStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => (\n    createStyles({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main\n        },\n        form: {\n            width: '100%',\n            marginTop: theme.spacing(1)\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2)\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        progess: {\n            position: 'absolute'\n        }\n    }));\n\nexport default styles","import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { loginSystem } from '../../util/Proxy';\nimport { IUserProps, IUserState, User } from '../../interfaces/UserState';\nimport styles from './LoginStyle';\n\nclass login extends Component<IUserProps, IUserState> {\n\tconstructor(props: IUserProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\terrors: {},\n\t\t\tloading: false\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps: any) {\n\t\tif (nextProps?.UI?.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.UI.errors\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = async (event: { preventDefault: () => void; }) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ loading: true });\n\t\tconst userData: User = {\n\t\t\temail: this.state.email ? this.state.email : '',\n\t\t\tpassword: this.state.password ? this.state.password : ''\n\t\t};\n\n\t\tconst response = await loginSystem(userData, (error: any) => {\n\n\t\t\tif (error.response != null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\terrors: error.response.data,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconsole.log(error);\n\t\t});\n\n\t\tif (response != null) {\n\t\t\tlocalStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { errors, loading } = this.state;\n\t\treturn (\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\thelperText={errors?.email}\n\t\t\t\t\t\t\terror={errors?.email ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\thelperText={errors?.password}\n\t\t\t\t\t\t\terror={errors?.password ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\tdisabled={loading || !this.state.email || !this.state.password}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{errors?.general && (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" className={classes.customError}>\n\t\t\t\t\t\t\t\t{errors?.general}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(login);","import { createStyles, Theme } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3)\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {},\n        details: {\n            display: 'flex'\n        },\n        avatar: {\n            height: 110,\n            width: 100,\n            flexShrink: 0,\n            flexGrow: 0\n        },\n        locationText: {\n            paddingLeft: '15px'\n        },\n        buttonProperty: {\n            position: 'absolute',\n            top: '50%'\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        progess: {\n            position: 'absolute'\n        },\n        uploadButton: {\n            marginLeft: '8px',\n            margin: theme.spacing(1)\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        submitButton: {\n            marginTop: '10px'\n        }\n    }));\n\nexport default styles;","import React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Card, CardActions, CardContent, Divider, Grid, TextField } from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { authMiddleWare } from '../../util/auth';\nimport { GetUser } from '../../util/Proxy';\nimport { IAccountState, IAccountProps } from '../../interfaces/AccountState';\nimport styles from './AccountStyle';\n\nclass account extends Component<IAccountProps, IAccountState> {\n\tconstructor(props: IAccountProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\temail: '',\n\t\t\tphoneNumber: '',\n\t\t\tusername: '',\n\t\t\tcountry: '',\n\t\t\tprofilePicture: '',\n\t\t\tuiLoading: true,\n\t\t\tbuttonLoading: false,\n\t\t\timageError: ''\n\t\t};\n\t}\n\n\tcomponentWillMount = async () => {\n\t\tauthMiddleWare(this.props.history);\n\n\t\ttry {\n\t\t\tconst response = await GetUser();\n\n\t\t\tthis.setState({\n\t\t\t\tfirstName: response.data.userCredentials.firstName,\n\t\t\t\tlastName: response.data.userCredentials.lastName,\n\t\t\t\temail: response.data.userCredentials.email,\n\t\t\t\tphoneNumber: response.data.userCredentials.phoneNumber,\n\t\t\t\tcountry: response.data.userCredentials.country,\n\t\t\t\tusername: response.data.userCredentials.username,\n\t\t\t\tuiLoading: false\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error.response.status === 403) {\n\t\t\t\tthis.props.history?.push('/login');\n\t\t\t}\n\t\t\tthis.setState({ errorMsg: 'Error in retrieving the data' });\n\t\t}\n\n\t};\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes, ...rest } = this.props;\n\t\tif (this.state.uiLoading === true) {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t{this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n\t\t\t\t</main>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.locationText} gutterBottom variant=\"h4\">\n\t\t\t\t\t\t\t\t\t\t{this.state.firstName} {this.state.lastName}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.progress} />\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<form autoComplete=\"off\" noValidate>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.firstName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.lastName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"userHandle\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"country\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.country}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardActions />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Card>\n\t\t\t\t</main>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default withStyles(styles)(account);","import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, createStyles, IconButton } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from '@material-ui/core/Grid';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IGameStatusProps, IGameStatusState } from '../interfaces/GameStatusState';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        toolbar: theme.mixins.toolbar,\n        root: {\n            marginBottom: 10\n        },\n        title: {\n            fontSize: 18,\n        },\n        matchedTitle: {\n            fontSize: 18,\n            color: 'green',\n            fontWeight: 'bold'\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'orange',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n        },\n        ballMatched: {\n            backgroundColor: 'green',\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        cardHeader: {\n            marginBottom: 10\n        },\n        buttonAction: {\n\n        }\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n    game: IGame;\n    handleDelete: Function;\n    plusAction?: Function;\n}\n\ninterface IState {\n    email?: String;\n    password?: String;\n    errors?: Error;\n    loading?: boolean;\n    retrievedData?: IGame[],\n    gameFinished?: IGame[],\n    gameQueued?: IGame[]\n}\n\ninterface IGame {\n    gameNumber?: string,\n    numbersPlayed: string[],\n    numbersDrawn?: string[],\n    numbersState?: IBallState[],\n    gameId?: string,\n    countMatched?: number,\n    ballsMatched?: string[],\n    gameDescription?: string,\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\nclass GameStatus extends Component<IGameStatusProps, IGameStatusState> {\n\n    render() {\n        const { classes, game, handleDelete, plusAction } = this.props;\n        return (\n\n            <Card className={classes.root} key={game.gameId}>\n                <CardContent>\n                    <Grid container spacing={4} className={classes.cardHeader}>\n                        <Grid item xs>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Game: {game.gameNumber}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs>\n                            {\n                                game.gameDescription ?\n                                    (\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                            {game.gameDescription}\n                                        </Typography>\n                                    ) : ''\n                            }\n                        </Grid>\n                        <Grid item xs>\n                            {\n                                game.countMatched ?\n                                    (\n                                        <Typography className={game.countMatched >= 11 ? classes.matchedTitle : classes.title} color=\"textSecondary\" gutterBottom>\n                                            Matched: {game.countMatched}\n                                        </Typography>\n                                    )\n                                    : ''\n                            }\n\n\n                        </Grid>\n                        <Grid className={classes.buttonAction}>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => handleDelete(game)}>\n                                <DeleteIcon />\n                            </IconButton>\n                            {\n                                plusAction ?\n                                    (\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => plusAction(game)}>\n                                            <RefreshIcon />\n                                        </IconButton>\n                                    )\n                                    : ''\n                            }\n                        </Grid>\n                    </Grid>\n\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                        {\n                            game.numbersPlayed.map((ballNumber: string, index: number) => {\n                                return (<span className={classes.ball} key={game.gameId + ballNumber}>{ballNumber}</span>)\n                            })\n                        }\n                    </Typography>\n\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                        {\n                            game.numbersState?.map((ballNumber: IBallState, index: number) => {\n                                return (<span className={ballNumber.checked ? classes.ballChecked : classes.ball} key={game.gameId + ballNumber.value}>{ballNumber.value}</span>)\n                            })\n                        }\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n\n}\n\nexport default (withStyles(styles)(GameStatus));","import { Theme, createStyles } from \"@material-ui/core\";\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        root: {\n            marginTop: 10\n        },\n        matchedTitle: {\n            fontSize: 18,\n            color: 'green'\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        toolbar: theme.mixins.toolbar,\n        line: {\n            marginBottom: 50,\n            marginTop: 50,\n            color: 'gray'\n        },\n    }))\n);\n\nexport default styles;","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { CircularProgress } from '@material-ui/core';\nimport * as _ from 'lodash';\nimport GameStatus from '../../elements/GameStatus';\nimport { listAllGamesMatched, deleteGame } from '../../util/Proxy';\nimport { ILotteryState, ILotteryProps, IGame } from '../../interfaces/LotteryState';\nimport { IBallState } from '../../interfaces/GameStatusState';\nimport styles from './LotteryStyle';\n\nclass Lottery extends Component<ILotteryProps, ILotteryState> {\n\n    constructor(props: ILotteryProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        let gamesQueued: Array<IGame> = [];\n        let gamesFinished: Array<IGame> = [];\n\n        try {\n\n            const { data } = await listAllGamesMatched();\n\n            gamesFinished = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length > 0)\n                .sortBy('gameNumber')\n                .reverse()\n                .value();\n\n            gamesFinished = gamesFinished.map((game: IGame) => {\n                let ballScenario: Array<IBallState> = []\n\n                game.numbersDrawn.map((value: string) => {\n                    ballScenario.push({\n                        checked: game.ballsMatched?.some((matched: string) => matched === value),\n                        value: value\n                    })\n\n                    return value;\n                })\n\n                return {\n                    ...game,\n                    numbersState: ballScenario\n                }\n            });\n\n            gamesQueued = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length === 0)\n                .sortBy('gameNumber')\n                .value();\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ gameFinished: gamesFinished, gameQueued: gamesQueued });\n    }\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n\n            await deleteGame(game.gameId)\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameFinished, gameQueued } = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (<main className={classes.root}>\n                <div className={classes.toolbar} />\n                {\n                    gameQueued?.map((game: IGame) => {\n                        return (\n                            <GameStatus key={game.gameId} game={game} handleDelete={this.handleDelete}></GameStatus>\n                        )\n                    })\n                }\n                <hr className={classes.line} />\n                {\n                    gameFinished?.map((game: IGame) => {\n                        return (\n                            <GameStatus key={game.gameId} game={game} handleDelete={this.handleDelete}></GameStatus>\n                        )\n                    })\n                }\n\n            </main>)\n        }\n    }\n}\n\nexport default (withStyles(styles)(Lottery));","import { createStyles, Theme } from \"@material-ui/core\";\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        root: {\n            marginBottom: 10,\n            marginTop: 10,\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        toolbar: theme.mixins.toolbar,\n        modalStyle: {\n            top: '50%',\n            left: '50%',\n            transform: \"translate(-50%, -50%)\"\n        },\n        inputsGameNumber:{\n            display: 'flex',\n            flexDirection: 'column',\n            marginBottom: 10,\n            maxWidth: 200\n        }\n    }))\n);\n\nexport default styles;","import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TextField, Button, IconButton, CircularProgress, Modal } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport * as _ from 'lodash';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { newGame, listAllGames, deleteGame } from '../../util/Proxy';\nimport GameStatus from '../../elements/GameStatus';\nimport { IGameState, IGameProps, IGame } from '../../interfaces/GameState';\nimport { IBallState } from '../../interfaces/GameStatusState';\nimport styles from './GameStyle';\n\nclass Game extends Component<IGameProps, IGameState> {\n    constructor(props: IGameProps) {\n        super(props);\n\n        this.state = this.initiateState();\n    }\n\n    initiateState = () => {\n        return {\n            loading: false,\n            initialGameNumber: '',\n            finalGameNumber: '',\n            gameNumberDuplicate: '',\n            gameDescription: '',\n            gameToDuplicate: undefined,\n            ballsNumber: [\n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n        };\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n\n        const { initialGameNumber, finalGameNumber, ballsNumber, gameDescription } = this.state;\n\n        const ballsSelected = ballsNumber?.filter((ball: IBallState) => ball.checked);\n\n        const initialNumber = Number(initialGameNumber);\n        const finalNumber = Number(finalGameNumber);\n\n        if (isNaN(initialNumber) || initialNumber === 0\n            || isNaN(finalNumber) || finalNumber === 0) {\n            this.setState({ errors: ['Initial and final game number is required'], loading: false })\n            return;\n        }\n\n        var newGameRequest = {\n            initialGameNumber,\n            finalGameNumber,\n            gameDescription,\n            numbersPlayed: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        try {\n            this.setState({ loading: true });\n\n            await newGame(newGameRequest);\n\n            await this.retrieveData();\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n\n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball: IBallState) => ball.checked);\n\n        if (ballsSelected && ballsSelected?.length === 15 && currentChange) {\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if (ball.value === ballNumber.value) {\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ ballsNumber: currentBalls });\n    }\n\n    handleChange = (event: any) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            errors: []\n        });\n    };\n\n    componentWillMount = async () => {\n        console.log('Buscando dados');\n        this.setState({ loading: true });\n        await this.retrieveData();\n\n        const { retrievedData } = this.state;\n\n        retrievedData?.forEach((game: IGame, index: number) => {\n            const gameNumber = game.gameNumber ?? 0;\n            if (gameNumber > 1980) {\n                return\n            }\n\n            setTimeout(async () => {\n                console.log('deletando', game.gameId)\n                await deleteGame(game.gameId)\n                console.log('done', game.gameId)\n            }, 10000 * index)\n        })\n\n\n        this.setState({ loading: false });\n    }\n\n    retrieveData = async () => {\n        let allGames: Array<IGame> = [];\n\n        try {\n\n            const { data } = await listAllGames();\n\n            const gamesQueued: IGame[] = _.chain(data)\n                .sortBy('gameNumber')\n                .value();\n\n            allGames.push.apply(allGames, gamesQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allGames });\n    }\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n\n            await deleteGame(game.gameId);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    handleDuplicate = async (game: IGame) => {\n        this.setState({ gameToDuplicate: game });\n\n        this.modalState(true);\n    }\n\n    duplicateGame = async () => {\n        this.setState({ loading: true });\n\n        try {\n            const { gameToDuplicate, gameNumberDuplicate } = this.state;\n\n            if (gameToDuplicate == null) {\n                return;\n            }\n\n            var newGameRequest = {\n                initialGameNumber: gameNumberDuplicate,\n                finalGameNumber: gameNumberDuplicate,\n                gameDescription: gameToDuplicate.gameDescription,\n                numbersPlayed: gameToDuplicate.numbersPlayed\n            }\n\n            await newGame(newGameRequest);\n\n            await this.retrieveData();\n\n            this.modalState(false);\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n    }\n\n    modalState = async (state: boolean) => {\n        this.setState({ modalOpened: state, gameNumberDuplicate: '' });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameNumberDuplicate, loading, initialGameNumber, finalGameNumber, ballsNumber, errors, retrievedData, modalOpened, gameDescription } = this.state;\n\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main >\n                    <div className={classes.toolbar} />\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <form className={classes.formInput} noValidate autoComplete=\"off\">\n                                <div className={classes.inputsGameNumber}>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"initialGameNumber\"\n                                        id=\"initialGameNumber\"\n                                        label=\"Initial Game Number\"\n                                        value={initialGameNumber}\n                                        onChange={this.handleChange} />\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"finalGameNumber\"\n                                        id=\"finalGameNumber\"\n                                        label=\"Final Game Number\"\n                                        value={finalGameNumber}\n                                        onChange={this.handleChange} />\n                                        <TextField\n                                        name=\"gameDescription\"\n                                        id=\"gameDescription\"\n                                        label=\"Game Description\"\n                                        inputProps={{maxLength: 12}}\n                                        value={gameDescription}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div className={classes.inputField}>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index > 8)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 9 || index > 17)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 18)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </div>\n\n                                <div className={classes.inputField}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={loading}\n                                        onClick={this.handleSubmit}>\n                                        Save\n                                </Button>\n                                </div>\n                                <div className={classes.inputField}>\n                                    {(\n                                        <Typography variant=\"body2\" className={classes.customError}>\n                                            {errors}\n                                        </Typography>\n                                    )}\n                                </div>\n                            </form>\n\n                        </CardContent>\n                    </Card>\n                    {\n                        retrievedData?.map((game: IGame) => {\n                            return (\n                                <GameStatus key={game.gameId} game={game} handleDelete={this.handleDelete} plusAction={this.handleDuplicate}></GameStatus>\n                            )\n                        })\n                    }\n\n                    <Modal\n                        open={modalOpened ? modalOpened : false}\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                    >\n                        <div className={[classes.paper, classes.modalStyle].join(' ')}>\n\n                            <div>\n                                <TextField\n                                    type=\"number\"\n                                    name=\"gameNumberDuplicate\"\n                                    id=\"gameNumberDuplicate\"\n                                    label=\"Game Number\"\n                                    value={gameNumberDuplicate}\n                                    onChange={this.handleChange} />\n                            </div>\n\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.modalState(false)}>\n                                <CloseIcon />\n                            </IconButton>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.duplicateGame()}>\n                                <SaveIcon />\n                            </IconButton>\n                        </div>\n                    </Modal>\n                </main>\n            )\n        }\n\n\n\n\n    }\n}\n\nexport default (withStyles(styles)(Game));","import { createStyles, Theme } from \"@material-ui/core\";\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {\n            marginBottom: 10\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        inputsGameNumber: {\n            display: 'flex',\n            flexDirection: 'column',\n            marginBottom: 10,\n            maxWidth: 200\n        }\n    }))\n);\n\nexport default styles;","import React, { Component } from 'react'\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TextField, Button, CircularProgress } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport GameStatus from '../../elements/GameStatus';\nimport * as _ from 'lodash';\nimport { newDraw, listAllDraws, deleteDraw } from '../../util/Proxy';\nimport { IDrawState, IDrawProps, IDraw } from '../../interfaces/DrawState';\nimport { IBallState } from '../../interfaces/GameStatusState';\nimport styles from './DrawStyle';\n\nclass NewDraw extends Component<IDrawProps, IDrawState> {\n    constructor(props: IDrawProps) {\n        super(props);\n\n        this.state = this.initiateState();\n    }\n\n    handleDateChange = (date: Date | null) => {\n        this.setState({ drawDate: date });\n    };\n\n    initiateState = () => {\n        return {\n            loading: false,\n            drawNumber: '',\n            drawDate: new Date(),\n            ballsNumber: [\n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n        };\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n\n        const { drawNumber, drawDate, ballsNumber } = this.state;\n\n        if (drawNumber == null || Number(drawNumber) <= 0 || drawDate == null) {\n            this.setState({ errors: ['Inform the Game Number'] });\n\n            return;\n        }\n\n        this.setState({ loading: true });\n\n        const ballsSelected = ballsNumber?.filter((ball: IBallState) => ball.checked);\n\n        var newDrawRequest = {\n            drawNumber,\n            drawDate,\n            numbersDrawn: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        try {\n            await newDraw(newDrawRequest);\n\n            await this.retrieveData();\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball: IBallState) => ball.checked);\n\n        if (ballsSelected && ballsSelected?.length === 15 && currentChange) {\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if (ball.value === ballNumber.value) {\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ ballsNumber: currentBalls });\n    }\n\n    handleChange = (event: any) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        let allDraws: Array<IDraw> = [];\n\n        try {\n            const { data } = await listAllDraws();\n\n            const drawsQueued: IDraw[] = _.chain(data)\n                .sortBy('drawNumber')\n                .value();\n\n            allDraws.push.apply(allDraws, drawsQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allDraws });\n    }\n\n    handleDelete = async (draw: IDraw) => {\n        try {\n            this.setState({ loading: true });\n\n            await deleteDraw(draw.drawId);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loading, drawNumber, drawDate, ballsNumber, errors, retrievedData } = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <form className={classes.formInput} noValidate autoComplete=\"off\">\n                                <div className={classes.inputsGameNumber}>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"drawNumber\"\n                                        id=\"drawNumber\"\n                                        label=\"Draw Number\"\n                                        value={drawNumber}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <KeyboardDatePicker\n                                            disableToolbar\n                                            variant=\"inline\"\n                                            format=\"dd/MM/yyyy\"\n                                            margin=\"normal\"\n                                            id=\"date-picker-inline\"\n                                            label=\"Date picker inline\"\n                                            value={drawDate}\n                                            onChange={(value) => this.handleDateChange(value)}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change date',\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <div className={classes.inputField}>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index > 8)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 9 || index > 17)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 18)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </div>\n\n                                <div className={classes.inputField}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={loading}\n                                        onClick={this.handleSubmit}>\n                                        Save\n                            </Button>\n                                </div>\n                                <div className={classes.inputField}>\n                                    {(\n                                        <Typography variant=\"body2\" className={classes.customError}>\n                                            {errors}\n                                        </Typography>\n                                    )}\n                                </div>\n                            </form>\n\n                        </CardContent>\n                    </Card>\n\n                    {\n                        retrievedData?.map((game: IDraw) => {\n                            return (\n                                <GameStatus key={game.drawId} game={{ gameId: game.drawId, gameNumber: game.drawNumber, numbersPlayed: game.numbersDrawn }} handleDelete={this.handleDelete}></GameStatus>\n                            )\n                        })\n                    }\n                </main>\n            )\n        }\n    }\n}\n\nexport default (withStyles(styles)(NewDraw));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login/Login';\nimport Account from './pages/Account/Account';\nimport Lottery from './pages/Lottery/Lottery';\nimport Game from './pages/Game/Game';\nimport NewDraw from './pages/Draw/Draw';\n\nReactDOM.render(\n  (\n    <Router>\n      <App>\n        <Switch>\n          <Route exact path=\"/\" component={Lottery} />\n          <Route exact path=\"/game\" component={Game} />\n          <Route exact path=\"/draw\" component={NewDraw} />\n          <Route  exact path=\"/login\" component={Login} />\n          <Route  exact path=\"/account\" component={Account} />\n        </Switch>\n      </App>\n    </Router>\n  ),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}