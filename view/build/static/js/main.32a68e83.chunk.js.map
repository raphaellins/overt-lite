{"version":3,"sources":["util/auth.js","util/Proxy.tsx","App.tsx","serviceWorker.ts","pages/Login.tsx","pages/Account.tsx","elements/GameStatus.tsx","pages/Lottery.tsx","pages/Game.tsx","pages/NewDraw.tsx","index.tsx"],"names":["authMiddleWare","history","localStorage","getItem","push","urlBase","authToken","axios","defaults","headers","common","Authorization","loginSystem","userData","onError","a","post","catch","error","listAllGamesMatched","get","newDraw","drawData","deleteDraw","drawId","delete","listAllDraws","newGame","gameData","deleteGame","gameId","listAllGames","GetUser","App","state","render","firstName","lastName","profilePicture","uiLoading","imageLoading","logoutHandler","event","removeItem","props","setState","left","loadPage","page","console","log","componentWillMount","response","data","userCredentials","email","phoneNumber","country","username","errorMsg","toggleDrawer","anchor","open","type","key","classes","this","className","container","CircularProgress","size","uiProgess","root","CssBaseline","AppBar","position","appBar","Toolbar","Button","onClick","Typography","variant","noWrap","Drawer","drawer","onClose","paper","drawerPaper","toolbar","List","ListItem","button","ListItemText","primary","children","Component","withStyles","theme","createStyles","zIndex","width","flexShrink","Index","height","display","alignItems","justifyContent","flexDirection","mixins","withRouter","Boolean","window","location","hostname","match","login","handleChange","target","name","value","handleSubmit","preventDefault","loading","password","errors","setItem","token","nextProps","UI","Container","component","maxWidth","Avatar","avatar","form","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","helperText","onChange","color","submit","disabled","progess","general","customError","marginTop","spacing","backgroundColor","palette","secondary","main","fontSize","account","status","buttonLoading","imageError","rest","content","Card","clsx","CardContent","details","locationText","gutterBottom","progress","Divider","Grid","item","md","xs","CardActions","flexGrow","padding","paddingLeft","buttonProperty","top","uploadButton","marginLeft","submitButton","GameStatus","game","handleDelete","plusAction","cardHeader","title","gameNumber","gameDescription","countMatched","matchedTitle","buttonAction","IconButton","aria-label","numbers","numbersPlayed","map","ballNumber","index","ball","numbersState","checked","ballChecked","marginBottom","fontWeight","pos","borderRadius","marginRight","ballMatched","Lottery","retrieveData","gamesQueued","gamesFinished","_","filter","numbersDrawn","length","sortBy","reverse","ballScenario","ballsMatched","some","matched","gameFinished","gameQueued","line","Game","initiateState","initialGameNumber","finalGameNumber","gameNumberDuplicate","gameToDuplicate","undefined","ballsNumber","ballsSelected","initialNumber","Number","finalNumber","isNaN","newGameRequest","onClickBall","currentChange","currentBalls","forEach","retrievedData","setTimeout","allGames","apply","handleDuplicate","modalState","duplicateGame","modalOpened","formInput","inputsGameNumber","inputField","Modal","aria-labelledby","aria-describedby","modalStyle","join","border","cursor","ballsNumbers","background","boxShadow","shadows","transform","NewDraw","handleDateChange","date","drawDate","drawNumber","Date","newDrawRequest","allDraws","drawsQueued","draw","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","bullet","ReactDOM","exact","path","Login","Account","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.32a68e83.chunk.js","sourcesContent":["export const authMiddleWare = (history) => {\n    const authToken = localStorage.getItem('AuthToken');\n    if(authToken === null){\n        history.push('/login')\n    }\n}","\nimport axios from 'axios';\nimport { User } from '../interfaces/User';\n\nconst urlBase = () => {\n    const authToken = localStorage.getItem('AuthToken');\n    axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n    return \"https://us-central1-overtlite.cloudfunctions.net/api\";\n}\n\nexport const loginSystem = async (userData: User, onError: Function) => {\n    return await axios\n        .post(`${urlBase()}/login`, userData)\n        .catch((error) => onError(error) );\n}\n\nexport const listAllGamesMatched = async () => {\n    return await axios.get(`${urlBase()}/games`);\n}\n\nexport const newDraw = async (drawData: any) => {\n    return await axios\n        .post(`${urlBase()}/new-draw`, drawData)\n}\n\nexport const deleteDraw = async (drawId: string |  undefined) => {\n    return await axios.delete(`${urlBase()}/draw/${drawId}`)\n}\n\nexport const listAllDraws = async () => {\n    return await axios.get(`${urlBase()}/draws-all`)\n}\n\nexport const newGame = async (gameData: any) => {\n    return await axios\n        .post(`${urlBase()}/new-game`, gameData);\n}\n\nexport const deleteGame = async (gameId: string | undefined) => {\n    return await axios.delete(`${urlBase()}/game/${gameId}`);\n}\n\nexport const listAllGames = async () => {\n    return await axios.get(`${urlBase()}/games-all`);\n}\n\nexport const GetUser = async () => {\n    return await axios.get(`${urlBase()}/user`);\n}","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { authMiddleWare } from './util/auth'\nimport { Theme, createStyles, Button } from '@material-ui/core';\nimport { withRouter, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport { GetUser } from './util/Proxy';\n\nconst styles = (theme: Theme) => (\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: 240,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: 240\n    },\n    uiProgess: {\n      Index: '1000',\n      height: '31px',\n      width: '31px',\n    },\n    container: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    toolbar: theme.mixins.toolbar\n  }));\n\ninterface IState {\n  firstName?: String,\n  lastName?: String,\n  profilePicture?: String,\n  uiLoading?: boolean,\n  imageLoading?: boolean,\n  render?: boolean,\n  email?: String,\n  phoneNumber?: String,\n  country?: String,\n  username?: String,\n  errorMsg?: String,\n  left?: boolean\n}\n\ntype PropsType = RouteComponentProps & {\n  history?: Array<String>;\n  classes: any;\n  children: any;\n}\n\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\n\nclass App extends Component<PropsType, IState, RouteProps> {\n  state: IState = {\n    render: true,\n    firstName: '',\n    lastName: '',\n    profilePicture: '',\n    uiLoading: true,\n    imageLoading: false\n  };\n\n  logoutHandler = (event: any) => {\n    localStorage.removeItem('AuthToken');\n    this.props.history?.push('/login');\n\n    this.setState({ left: false });\n  };\n\n  loadPage = (page: string) => {\n    this.props.history?.push(page)\n    this.setState({ left: false });\n    console.log(page);\n  }\n\n  componentWillMount = async () => {\n    authMiddleWare(this.props.history);\n\n    try {\n      const response = await GetUser();\n\n      if (response && response.data) {\n        this.setState({\n          firstName: response.data.userCredentials.firstName,\n          lastName: response.data.userCredentials.lastName,\n          email: response.data.userCredentials.email,\n          phoneNumber: response.data.userCredentials.phoneNumber,\n          country: response.data.userCredentials.country,\n          username: response.data.userCredentials.username,\n          uiLoading: false\n        });\n      }\n\n    } catch (error) {\n      localStorage.removeItem('AuthToken');\n      this.props.history?.push('/login');\n      this.setState({ errorMsg: 'Error in retrieving the data', uiLoading: false });\n    }\n  };\n\n  toggleDrawer = (anchor: Anchor, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    this.setState({ ...this.state, [anchor]: open })\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { left } = this.state;\n    if (this.state.uiLoading === true) {\n      return (\n        <div className={classes.container}>\n          {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.root} >\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <Button onClick={this.toggleDrawer(\"left\", true)}>Menu</Button>\n              <Typography variant=\"h6\" noWrap>\n                Overt Lite\n\t\t\t\t\t\t\t</Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            anchor=\"left\"\n            open={left}\n            onClose={() => this.toggleDrawer('left', false)}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.toolbar} />\n            <List>\n              <ListItem button key=\"Lottery\" onClick={() => this.loadPage(\"/\")}>\n                <ListItemText primary=\"Lottery\" />\n              </ListItem>\n              <ListItem button key=\"NewDraw\" onClick={() => this.loadPage(\"/draw\")}>\n                <ListItemText primary=\"New Draw\" />\n              </ListItem>\n              <ListItem button key=\"NewGame\" onClick={() => this.loadPage(\"/game\")}>\n                <ListItemText primary=\"New Game\" />\n              </ListItem>\n              <ListItem button key=\"Account\" onClick={() => this.loadPage(\"/account\")}>\n                <ListItemText primary=\"Account\" />\n              </ListItem>\n              <ListItem button key=\"Logout\" onClick={this.logoutHandler}>\n                <ListItemText primary=\"Logout\" />\n              </ListItem>\n            </List>\n          </Drawer>\n          <div className={classes.container}>\n            {this.props.children}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(withRouter(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { loginSystem } from '../util/Proxy';\n\nimport { Theme, createStyles } from '@material-ui/core';\n\ninterface User {\n\temail: String;\n\tpassword: String;\n}\n\ninterface Error {\n\tpassword?: String;\n\temail?: String;\n\tgeneral?: String;\n}\n\ninterface IState {\n\temail?: String;\n\tpassword?: String;\n\terrors?: Error;\n\tloading?: boolean;\n}\n\ninterface IProps {\n\thistory: Array<String>;\n\tclasses: any;\n}\n\nconst styles = (theme: Theme) => (\n\tcreateStyles({\n\t\tpaper: {\n\t\t\tmarginTop: theme.spacing(8),\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\talignItems: 'center'\n\t\t},\n\t\tavatar: {\n\t\t\tmargin: theme.spacing(1),\n\t\t\tbackgroundColor: theme.palette.secondary.main\n\t\t},\n\t\tform: {\n\t\t\twidth: '100%',\n\t\t\tmarginTop: theme.spacing(1)\n\t\t},\n\t\tsubmit: {\n\t\t\tmargin: theme.spacing(3, 0, 2)\n\t\t},\n\t\tcustomError: {\n\t\t\tcolor: 'red',\n\t\t\tfontSize: '0.8rem',\n\t\t\tmarginTop: 10\n\t\t},\n\t\tprogess: {\n\t\t\tposition: 'absolute'\n\t\t}\n\t}));\n\nclass login extends Component<IProps, IState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\terrors: {},\n\t\t\tloading: false\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps: any) {\n\t\tif (nextProps?.UI?.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.UI.errors\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = async (event: { preventDefault: () => void; }) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ loading: true });\n\t\tconst userData: User = {\n\t\t\temail: this.state.email ? this.state.email : '',\n\t\t\tpassword: this.state.password ? this.state.password : ''\n\t\t};\n\n\t\tconst response = await loginSystem(userData, (error: any) => {\n\n\t\t\tif (error.response != null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\terrors: error.response.data,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconsole.log(error);\n\t\t});\n\n\t\tif (response != null) {\n\t\t\tlocalStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { errors, loading } = this.state;\n\t\treturn (\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\thelperText={errors?.email}\n\t\t\t\t\t\t\terror={errors?.email ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\thelperText={errors?.password}\n\t\t\t\t\t\t\terror={errors?.password ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\tdisabled={loading || !this.state.email || !this.state.password}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{errors?.general && (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" className={classes.customError}>\n\t\t\t\t\t\t\t\t{errors?.general}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(login);","import React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Card, CardActions, CardContent, Divider, Grid, TextField, Theme, createStyles } from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { authMiddleWare } from '../util/auth';\nimport { GetUser } from '../util/Proxy';\n\nconst styles = (theme: Theme) => (\n\tcreateStyles({\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tpadding: theme.spacing(3)\n\t\t},\n\t\ttoolbar: theme.mixins.toolbar,\n\t\troot: {},\n\t\tdetails: {\n\t\t\tdisplay: 'flex'\n\t\t},\n\t\tavatar: {\n\t\t\theight: 110,\n\t\t\twidth: 100,\n\t\t\tflexShrink: 0,\n\t\t\tflexGrow: 0\n\t\t},\n\t\tlocationText: {\n\t\t\tpaddingLeft: '15px'\n\t\t},\n\t\tbuttonProperty: {\n\t\t\tposition: 'absolute',\n\t\t\ttop: '50%'\n\t\t},\n\t\tuiProgess: {\n\t\t\tposition: 'fixed',\n\t\t\tIndex: '1000',\n\t\t\theight: '31px',\n\t\t\twidth: '31px',\n\t\t\tleft: '50%',\n\t\t\ttop: '35%'\n\t\t},\n\t\tprogess: {\n\t\t\tposition: 'absolute'\n\t\t},\n\t\tuploadButton: {\n\t\t\tmarginLeft: '8px',\n\t\t\tmargin: theme.spacing(1)\n\t\t},\n\t\tcustomError: {\n\t\t\tcolor: 'red',\n\t\t\tfontSize: '0.8rem',\n\t\t\tmarginTop: 10\n\t\t},\n\t\tsubmitButton: {\n\t\t\tmarginTop: '10px'\n\t\t}\n\t}));\n\ninterface IProps {\n\thistory?: Array<string>;\n\tclasses?: any;\n}\n\ninterface IState {\n\tfirstName?: String,\n\tlastName?: String,\n\tprofilePicture?: String,\n\tuiLoading?: boolean,\n\timageLoading?: boolean,\n\trender?: boolean,\n\temail?: String,\n\tphoneNumber?: String,\n\tcountry?: String,\n\tusername?: String,\n\terrorMsg?: String,\n\tbuttonLoading?: boolean,\n\timageError?: String,\n\timage?: string,\n\tcontent?: string\n}\n\nclass account extends Component<IProps, IState> {\n\tconstructor(props: IProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\temail: '',\n\t\t\tphoneNumber: '',\n\t\t\tusername: '',\n\t\t\tcountry: '',\n\t\t\tprofilePicture: '',\n\t\t\tuiLoading: true,\n\t\t\tbuttonLoading: false,\n\t\t\timageError: ''\n\t\t};\n\t}\n\n\tcomponentWillMount = async () => {\n\t\tauthMiddleWare(this.props.history);\n\n\t\ttry {\n\t\t\tconst response = await GetUser();\n\n\t\t\tthis.setState({\n\t\t\t\tfirstName: response.data.userCredentials.firstName,\n\t\t\t\tlastName: response.data.userCredentials.lastName,\n\t\t\t\temail: response.data.userCredentials.email,\n\t\t\t\tphoneNumber: response.data.userCredentials.phoneNumber,\n\t\t\t\tcountry: response.data.userCredentials.country,\n\t\t\t\tusername: response.data.userCredentials.username,\n\t\t\t\tuiLoading: false\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error.response.status === 403) {\n\t\t\t\tthis.props.history?.push('/login');\n\t\t\t}\n\t\t\tthis.setState({ errorMsg: 'Error in retrieving the data' });\n\t\t}\n\n\t};\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes, ...rest } = this.props;\n\t\tif (this.state.uiLoading === true) {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t{this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n\t\t\t\t</main>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.locationText} gutterBottom variant=\"h4\">\n\t\t\t\t\t\t\t\t\t\t{this.state.firstName} {this.state.lastName}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.progress} />\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<form autoComplete=\"off\" noValidate>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.firstName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.lastName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"userHandle\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"country\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.country}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardActions />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Card>\n\t\t\t\t</main>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default withStyles(styles)(account);","import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, createStyles, IconButton } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from '@material-ui/core/Grid';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        toolbar: theme.mixins.toolbar,\n        root: {\n            marginBottom: 10\n        },\n        title: {\n            fontSize: 18,\n        },\n        matchedTitle: {\n            fontSize: 18,\n            color: 'green',\n            fontWeight: 'bold'\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'orange',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n        },\n        ballMatched: {\n            backgroundColor: 'green',\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        cardHeader: {\n            marginBottom: 10\n        },\n        buttonAction: {\n\n        }\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n    game: IGame;\n    handleDelete: Function;\n    plusAction?: Function;\n}\n\ninterface IState {\n    email?: String;\n    password?: String;\n    errors?: Error;\n    loading?: boolean;\n    retrievedData?: IGame[],\n    gameFinished?: IGame[],\n    gameQueued?: IGame[]\n}\n\ninterface IGame {\n    gameNumber?: string,\n    numbersPlayed: string[],\n    numbersDrawn?: string[],\n    numbersState?: IBallState[],\n    gameId?: string,\n    countMatched?: number,\n    ballsMatched?: string[],\n    gameDescription?: string,\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\nclass GameStatus extends Component<IProps, IState> {\n\n    render() {\n        const { classes, game, handleDelete, plusAction } = this.props;\n        return (\n\n            <Card className={classes.root} key={game.gameId}>\n                <CardContent>\n                    <Grid container spacing={4} className={classes.cardHeader}>\n                        <Grid item xs>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Game: {game.gameNumber}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs>\n                            {\n                                game.gameDescription ?\n                                    (\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                            {game.gameDescription}\n                                        </Typography>\n                                    ) : ''\n                            }\n                        </Grid>\n                        <Grid item xs>\n                            {\n                                game.countMatched ?\n                                    (\n                                        <Typography className={game.countMatched >= 11 ? classes.matchedTitle : classes.title} color=\"textSecondary\" gutterBottom>\n                                            Matched: {game.countMatched}\n                                        </Typography>\n                                    )\n                                    : ''\n                            }\n\n\n                        </Grid>\n                        <Grid className={classes.buttonAction}>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => handleDelete(game)}>\n                                <DeleteIcon />\n                            </IconButton>\n                            {\n                                plusAction ?\n                                    (\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => plusAction(game)}>\n                                            <RefreshIcon />\n                                        </IconButton>\n                                    )\n                                    : ''\n                            }\n                        </Grid>\n                    </Grid>\n\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                        {\n                            game.numbersPlayed.map((ballNumber: string, index: number) => {\n                                return (<span className={classes.ball} key={game.gameId + ballNumber}>{ballNumber}</span>)\n                            })\n                        }\n                    </Typography>\n\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                        {\n                            game.numbersState?.map((ballNumber: IBallState, index: number) => {\n                                return (<span className={ballNumber.checked ? classes.ballChecked : classes.ball} key={game.gameId + ballNumber.value}>{ballNumber.value}</span>)\n                            })\n                        }\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n\n}\n\nexport default (withStyles(styles)(GameStatus));","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, createStyles, CircularProgress } from '@material-ui/core';\nimport * as _ from 'lodash';\nimport GameStatus from '../elements/GameStatus';\nimport { listAllGamesMatched, deleteGame } from '../util/Proxy';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        root: {\n            marginTop: 10\n        },\n        matchedTitle: {\n            fontSize: 18,\n            color: 'green'\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        toolbar: theme.mixins.toolbar,\n        line: {\n            marginBottom: 50,\n            marginTop: 50,\n            color: 'gray'\n        },\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n    gameFinished?: IGame[],\n    gameQueued?: IGame[]\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\ninterface IGame {\n    gameNumber: string,\n    numbersPlayed: string[],\n    numbersDrawn: string[],\n    numbersState: IBallState[],\n    gameId: string,\n    countMatched: number,\n    ballsMatched: string[]\n}\n\ninterface IState {\n    email?: String;\n    password?: String;\n    errors?: Error;\n    loading?: boolean;\n    retrievedData?: IGame[],\n    gameFinished?: IGame[],\n    gameQueued?: IGame[]\n}\n\nclass Lottery extends Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        let gamesQueued: Array<IGame> = [];\n        let gamesFinished: Array<IGame> = [];\n\n        try {\n\n            const { data } = await listAllGamesMatched();\n\n            gamesFinished = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length > 0)\n                .sortBy('gameNumber')\n                .reverse()\n                .value();\n\n            gamesFinished = gamesFinished.map((game: IGame) => {\n                let ballScenario: Array<IBallState> = []\n\n                game.numbersDrawn.map((value: string) => {\n                    ballScenario.push({\n                        checked: game.ballsMatched?.some((matched: string) => matched === value),\n                        value: value\n                    })\n\n                    return value;\n                })\n\n                return {\n                    ...game,\n                    numbersState: ballScenario\n                }\n            });\n\n            gamesQueued = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length === 0)\n                .sortBy('gameNumber')\n                .value();\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ gameFinished: gamesFinished, gameQueued: gamesQueued });\n    }\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n\n            await deleteGame(game.gameId)\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameFinished, gameQueued } = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (<main className={classes.root}>\n                <div className={classes.toolbar} />\n                {\n                    gameQueued?.map((game: IGame) => {\n                        return (\n                            <GameStatus key={game.gameId} game={game} handleDelete={this.handleDelete}></GameStatus>\n                        )\n                    })\n                }\n                <hr className={classes.line} />\n                {\n                    gameFinished?.map((game: IGame) => {\n                        return (\n                            <GameStatus key={game.gameId} game={game} handleDelete={this.handleDelete}></GameStatus>\n                        )\n                    })\n                }\n\n            </main>)\n        }\n    }\n}\n\nexport default (withStyles(styles)(Lottery));","import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, createStyles, TextField, Button, IconButton, CircularProgress, Modal } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport * as _ from 'lodash';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { newGame, listAllGames, deleteGame } from '../util/Proxy';\nimport GameStatus from '../elements/GameStatus';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        root: {\n            marginBottom: 10,\n            marginTop: 10,\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        toolbar: theme.mixins.toolbar,\n        modalStyle: {\n            top: '50%',\n            left: '50%',\n            transform: \"translate(-50%, -50%)\"\n        },\n        inputsGameNumber:{\n            display: 'flex',\n            flexDirection: 'column',\n            marginBottom: 10,\n            maxWidth: 200\n        }\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n}\n\ninterface IState {\n    loading?: boolean;\n    ballsNumber?: Array<IBallState>,\n    initialGameNumber?: string,\n    finalGameNumber?: string,\n    errors?: Array<string>,\n    retrievedData?: IGame[],\n    modalOpened?: boolean,\n    gameNumberDuplicate?: string,\n    gameToDuplicate?: IGame,\n    gameDescription?: string\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\ninterface IGame {\n    gameNumber?: string,\n    numbersPlayed: string[],\n    gameId?: string,\n    gameDescription?: string\n}\n\nclass Game extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = this.initiateState();\n    }\n\n    initiateState = () => {\n        return {\n            loading: false,\n            initialGameNumber: '',\n            finalGameNumber: '',\n            gameNumberDuplicate: '',\n            gameDescription: '',\n            gameToDuplicate: undefined,\n            ballsNumber: [\n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n        };\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n\n        const { initialGameNumber, finalGameNumber, ballsNumber, gameDescription } = this.state;\n\n        const ballsSelected = ballsNumber?.filter((ball: IBallState) => ball.checked);\n\n        const initialNumber = Number(initialGameNumber);\n        const finalNumber = Number(finalGameNumber);\n\n        if (isNaN(initialNumber) || initialNumber === 0\n            || isNaN(finalNumber) || finalNumber === 0) {\n            this.setState({ errors: ['Initial and final game number is required'], loading: false })\n            return;\n        }\n\n        var newGameRequest = {\n            initialGameNumber,\n            finalGameNumber,\n            gameDescription,\n            numbersPlayed: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        try {\n            this.setState({ loading: true });\n\n            await newGame(newGameRequest);\n\n            await this.retrieveData();\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n\n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball: IBallState) => ball.checked);\n\n        if (ballsSelected && ballsSelected?.length === 15 && currentChange) {\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if (ball.value === ballNumber.value) {\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ ballsNumber: currentBalls });\n    }\n\n    handleChange = (event: any) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            errors: []\n        });\n    };\n\n    componentWillMount = async () => {\n        console.log('Buscando dados');\n        this.setState({ loading: true });\n        await this.retrieveData();\n\n        const { retrievedData } = this.state;\n\n        retrievedData?.forEach((game: IGame, index: number) => {\n            const gameNumber = game.gameNumber ?? 0;\n            if (gameNumber > 1980) {\n                return\n            }\n\n            setTimeout(async () => {\n                console.log('deletando', game.gameId)\n                await deleteGame(game.gameId)\n                console.log('done', game.gameId)\n            }, 10000 * index)\n        })\n\n\n        this.setState({ loading: false });\n    }\n\n    retrieveData = async () => {\n        let allGames: Array<IGame> = [];\n\n        try {\n\n            const { data } = await listAllGames();\n\n            const gamesQueued: IGame[] = _.chain(data)\n                .sortBy('gameNumber')\n                .value();\n\n            allGames.push.apply(allGames, gamesQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allGames });\n    }\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n\n            await deleteGame(game.gameId);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    handleDuplicate = async (game: IGame) => {\n        this.setState({ gameToDuplicate: game });\n\n        this.modalState(true);\n    }\n\n    duplicateGame = async () => {\n        this.setState({ loading: true });\n\n        try {\n            const { gameToDuplicate, gameNumberDuplicate } = this.state;\n\n            if (gameToDuplicate == null) {\n                return;\n            }\n\n            var newGameRequest = {\n                initialGameNumber: gameNumberDuplicate,\n                finalGameNumber: gameNumberDuplicate,\n                gameDescription: gameToDuplicate.gameDescription,\n                numbersPlayed: gameToDuplicate.numbersPlayed\n            }\n\n            await newGame(newGameRequest);\n\n            await this.retrieveData();\n\n            this.modalState(false);\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n    }\n\n    modalState = async (state: boolean) => {\n        this.setState({ modalOpened: state, gameNumberDuplicate: '' });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameNumberDuplicate, loading, initialGameNumber, finalGameNumber, ballsNumber, errors, retrievedData, modalOpened, gameDescription } = this.state;\n\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main >\n                    <div className={classes.toolbar} />\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <form className={classes.formInput} noValidate autoComplete=\"off\">\n                                <div className={classes.inputsGameNumber}>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"initialGameNumber\"\n                                        id=\"initialGameNumber\"\n                                        label=\"Initial Game Number\"\n                                        value={initialGameNumber}\n                                        onChange={this.handleChange} />\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"finalGameNumber\"\n                                        id=\"finalGameNumber\"\n                                        label=\"Final Game Number\"\n                                        value={finalGameNumber}\n                                        onChange={this.handleChange} />\n                                        <TextField\n                                        name=\"gameDescription\"\n                                        id=\"gameDescription\"\n                                        label=\"Game Description\"\n                                        value={gameDescription}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div className={classes.inputField}>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index > 8)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 9 || index > 17)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 18)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </div>\n\n                                <div className={classes.inputField}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={loading}\n                                        onClick={this.handleSubmit}>\n                                        Save\n                                </Button>\n                                </div>\n                                <div className={classes.inputField}>\n                                    {(\n                                        <Typography variant=\"body2\" className={classes.customError}>\n                                            {errors}\n                                        </Typography>\n                                    )}\n                                </div>\n                            </form>\n\n                        </CardContent>\n                    </Card>\n                    {\n                        retrievedData?.map((game: IGame) => {\n                            return (\n                                <GameStatus key={game.gameId} game={game} handleDelete={this.handleDelete} plusAction={this.handleDuplicate}></GameStatus>\n                            )\n                        })\n                    }\n\n                    <Modal\n                        open={modalOpened ? modalOpened : false}\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                    >\n                        <div className={[classes.paper, classes.modalStyle].join(' ')}>\n\n                            <div>\n                                <TextField\n                                    type=\"number\"\n                                    name=\"gameNumberDuplicate\"\n                                    id=\"gameNumberDuplicate\"\n                                    label=\"Game Number\"\n                                    value={gameNumberDuplicate}\n                                    onChange={this.handleChange} />\n                            </div>\n\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.modalState(false)}>\n                                <CloseIcon />\n                            </IconButton>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.duplicateGame()}>\n                                <SaveIcon />\n                            </IconButton>\n                        </div>\n                    </Modal>\n                </main>\n            )\n        }\n\n\n\n\n    }\n}\n\nexport default (withStyles(styles)(Game));","import React, { Component } from 'react'\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, createStyles, TextField, Button, CircularProgress } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport GameStatus from '../elements/GameStatus';\nimport * as _ from 'lodash';\nimport { newDraw, listAllDraws, deleteDraw } from '../util/Proxy';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {\n            marginBottom: 10\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        inputsGameNumber:{\n            display: 'flex',\n            flexDirection: 'column',\n            marginBottom: 10,\n            maxWidth: 200\n        }\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n}\n\ninterface IState {\n    loading?: boolean;\n    ballsNumber?: Array<IBallState>,\n    drawNumber?: string,\n    drawDate?: Date | null,\n    errors?: Array<string>,\n    retrievedData?: Array<IDraw>\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\ninterface IDraw {\n    drawNumber: string,\n    numbersDrawn: string[],\n    drawId: string,\n}\n\n\nclass NewDraw extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = this.initiateState();\n    }\n\n    handleDateChange = (date: Date | null) => {\n        this.setState({ drawDate: date });\n    };\n\n    initiateState = () => {\n        return {\n            loading: false,\n            drawNumber: '',\n            drawDate: new Date(),\n            ballsNumber: [\n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n        };\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n\n        const { drawNumber, drawDate, ballsNumber } = this.state;\n\n        if (drawNumber == null || Number(drawNumber) <= 0 || drawDate == null) {\n            this.setState({ errors: ['Inform the Game Number'] });\n\n            return;\n        }\n\n        this.setState({ loading: true });\n\n        const ballsSelected = ballsNumber?.filter((ball: IBallState) => ball.checked);\n\n        var newDrawRequest = {\n            drawNumber,\n            drawDate,\n            numbersDrawn: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        try {\n            await newDraw(newDrawRequest);\n\n            await this.retrieveData();\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball: IBallState) => ball.checked);\n\n        if (ballsSelected && ballsSelected?.length === 15 && currentChange) {\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if (ball.value === ballNumber.value) {\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ ballsNumber: currentBalls });\n    }\n\n    handleChange = (event: any) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        let allDraws: Array<IDraw> = [];\n\n        try {\n            const { data } = await listAllDraws();\n\n            const drawsQueued: IDraw[] = _.chain(data)\n                .sortBy('drawNumber')\n                .value();\n\n            allDraws.push.apply(allDraws, drawsQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allDraws });\n    }\n\n    handleDelete = async (draw: IDraw) => {\n        try {\n            this.setState({ loading: true });\n\n            await deleteDraw(draw.drawId);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loading, drawNumber, drawDate, ballsNumber, errors, retrievedData } = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <form className={classes.formInput} noValidate autoComplete=\"off\">\n                                <div className={classes.inputsGameNumber}>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"drawNumber\"\n                                        id=\"drawNumber\"\n                                        label=\"Draw Number\"\n                                        value={drawNumber}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <KeyboardDatePicker\n                                            disableToolbar\n                                            variant=\"inline\"\n                                            format=\"dd/MM/yyyy\"\n                                            margin=\"normal\"\n                                            id=\"date-picker-inline\"\n                                            label=\"Date picker inline\"\n                                            value={drawDate}\n                                            onChange={(value) => this.handleDateChange(value)}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change date',\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <div className={classes.inputField}>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index > 8)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 9 || index > 17)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 18)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </div>\n\n                                <div className={classes.inputField}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={loading}\n                                        onClick={this.handleSubmit}>\n                                        Save\n                            </Button>\n                                </div>\n                                <div className={classes.inputField}>\n                                    {(\n                                        <Typography variant=\"body2\" className={classes.customError}>\n                                            {errors}\n                                        </Typography>\n                                    )}\n                                </div>\n                            </form>\n\n                        </CardContent>\n                    </Card>\n\n                    {\n                        retrievedData?.map((game: IDraw) => {\n                            return (\n                                <GameStatus key={game.drawId} game={{gameId: game.drawId, gameNumber: game.drawNumber, numbersPlayed: game.numbersDrawn}} handleDelete={this.handleDelete}></GameStatus>\n                            )\n                        })\n                    }\n                </main>\n            )\n        }\n    }\n}\n\nexport default (withStyles(styles)(NewDraw));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Account from './pages/Account';\nimport Lottery from './pages/Lottery';\nimport Game from './pages/Game';\nimport NewDraw from './pages/NewDraw';\n\nReactDOM.render(\n  (\n    <Router>\n      <App>\n        <Switch>\n          <Route exact path=\"/\" component={Lottery} />\n          <Route exact path=\"/game\" component={Game} />\n          <Route exact path=\"/draw\" component={NewDraw} />\n          <Route  exact path=\"/login\" component={Login} />\n          <Route  exact path=\"/account\" component={Account} />\n        </Switch>\n      </App>\n    </Router>\n  ),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}