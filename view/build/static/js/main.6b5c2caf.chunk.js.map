{"version":3,"sources":["components/Lottery.tsx","util/auth.js","components/Game.tsx","components/NewDraw.tsx","pages/Account.tsx","pages/Home.tsx","pages/Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Lottery","props","componentWillMount","a","retrieveData","authToken","localStorage","getItem","axios","defaults","headers","common","Authorization","allGames","get","data","gamesFinished","_","filter","game","numbersDrawn","length","sortBy","reverse","value","map","ballScenario","push","checked","ballsMatched","some","matched","numbersState","gamesQueued","apply","console","log","setState","retrievedData","handleDelete","loading","delete","gameId","state","classes","this","className","root","CircularProgress","size","uiProgess","content","toolbar","Card","key","CardContent","Grid","container","spacing","cardHeader","item","xs","Typography","title","color","gutterBottom","gameNumber","countMatched","IconButton","aria-label","component","onClick","variant","numbers","numbersPlayed","ballNumber","index","ball","ballChecked","Component","withStyles","theme","createStyles","flexGrow","padding","mixins","minWidth","marginBottom","bullet","display","margin","transform","fontSize","pos","backgroundColor","borderRadius","marginRight","fontWeight","ballMatched","position","Index","height","width","left","top","authMiddleWare","history","Game","initiateState","initialGameNumber","finalGameNumber","gameNumberDuplicate","gameToDuplicate","undefined","ballsNumber","errors","handleSubmit","event","preventDefault","ballsSelected","newGameRequest","post","onClickBall","currentChange","currentBalls","forEach","handleChange","target","name","handleDuplicate","modalState","duplicateGame","modalOpened","formInput","noValidate","autoComplete","TextField","type","id","label","onChange","inputField","Button","disabled","customError","Modal","open","aria-labelledby","aria-describedby","paper","modalStyle","join","border","cursor","ballsNumbers","marginTop","palette","background","boxShadow","shadows","NewDraw","handleDateChange","date","drawDate","drawNumber","Date","Number","newDrawRequest","allDraws","drawsQueued","draw","drawId","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","account","then","response","firstName","userCredentials","lastName","email","phoneNumber","country","username","uiLoading","catch","error","status","errorMsg","updateFormValues","buttonLoading","formRequest","profilePicture","imageError","rest","clsx","details","locationText","progress","Divider","md","fullWidth","CardActions","submitButton","progess","avatar","flexShrink","paddingLeft","buttonProperty","uploadButton","marginLeft","home","render","pageIndex","logoutHandler","removeItem","loadPage","imageUrl","toggleDrawer","anchor","imageLoading","CssBaseline","AppBar","appBar","Toolbar","noWrap","Drawer","drawer","onClose","drawerPaper","List","ListItem","button","ListItemIcon","ListItemText","primary","Account","zIndex","login","userData","password","setItem","token","nextProps","UI","Container","maxWidth","Avatar","form","required","autoFocus","helperText","submit","Link","href","general","flexDirection","alignItems","secondary","main","App","exact","path","Login","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6b5c2caf.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, Icon, createStyles, IconButton, CircularProgress } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {\n            minWidth: 500,\n            marginBottom: 10\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'orange',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n        },\n        ballMatched: {\n            backgroundColor: 'green',\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        cardHeader: {\n            marginBottom: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\ninterface IGame {\n    gameNumber: string,\n    numbersPlayed: string[],\n    numbersDrawn: string[],\n    numbersState: IBallState[],\n    gameId: string,\n    countMatched: number,\n    ballsMatched: string[]\n}\n\ninterface IState {\n    email?: String;\n    password?: String;\n    errors?: Error;\n    loading?: boolean;\n    retrievedData?: IGame[],\n}\n\nclass Lottery extends Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        const authToken = localStorage.getItem('AuthToken');\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n        let allGames: Array<IGame> = [];\n\n        try {\n            const { data } = await axios.get('https://us-central1-overtlite.cloudfunctions.net/api/games');\n\n            let gamesFinished: Array<IGame> = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length > 0)\n                .sortBy('gameNumber')\n                .reverse()\n                .value();\n\n            gamesFinished = gamesFinished.map((game: IGame) => {\n                let ballScenario: Array<IBallState> = []\n\n                game.numbersDrawn.map((value: string) => {\n\n                    ballScenario.push({\n                        checked: game.ballsMatched?.some((matched: string) => matched == value),\n                        value: value\n                    })\n                })\n\n                return {\n                    ...game,\n                    numbersState: ballScenario\n                }\n            });\n\n            const gamesQueued: IGame[] = _.chain(data)\n                .filter((game: IGame) => game.numbersDrawn.length == 0)\n                .sortBy('gameNumber')\n                .value();\n\n            allGames.push.apply(allGames, gamesQueued);\n            allGames.push.apply(allGames, gamesFinished);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allGames });\n    }\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n            await axios.delete(`https://us-central1-overtlite.cloudfunctions.net/api/game/${game.gameId}`);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { retrievedData } = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (<main className={classes.content}>\n                <div className={classes.toolbar} />\n                {\n                    retrievedData?.map((game: IGame) => {\n                        return (\n                            <Card className={classes.root} key={game.gameId}>\n                                <CardContent>\n                                    <Grid container spacing={3} className={classes.cardHeader}>\n                                        <Grid item xs>\n                                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                Game: {game.gameNumber}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs>\n                                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                Matched: {game.countMatched}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs>\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleDelete(game)}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                                        {\n                                            game.numbersPlayed.map((ballNumber: string, index: number) => {\n                                                return (<span className={classes.ball} key={game.gameId + ballNumber}>{ballNumber}</span>)\n                                            })\n                                        }\n                                    </Typography>\n\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n\n                                        {\n                                            game.numbersState?.map((ballNumber: IBallState, index: number) => {\n                                                return (<span className={ballNumber.checked ? classes.ballChecked : classes.ball} key={game.gameId + ballNumber.value}>{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        )\n                    })\n                }\n            </main>)\n        }\n    }\n}\n\nexport default (withStyles(styles)(Lottery));","export const authMiddleWare = (history) => {\n    const authToken = localStorage.getItem('AuthToken');\n    if(authToken === null){\n        history.push('/login')\n    }\n}","import React, { Component } from 'react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, Icon, createStyles, TextField, Button, Grid, IconButton, CircularProgress, Modal } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { stat } from 'fs';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {\n            minWidth: 340,\n            marginBottom: 10\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        modalStyle: {\n            top: '50%',\n            left: '50%',\n            transform: \"translate(-50%, -50%)\"\n        }\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n}\n\ninterface IState {\n    loading?: boolean;\n    ballsNumber?: Array<IBallState>,\n    initialGameNumber?: string,\n    finalGameNumber?: string,\n    errors?: Array<string>,\n    retrievedData?: IGame[],\n    modalOpened?: boolean,\n    gameNumberDuplicate?: string,\n    gameToDuplicate?: IGame\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\ninterface IGame {\n    gameNumber?: string,\n    numbersPlayed: string[],\n    gameId?: string,\n}\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nclass Game extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = this.initiateState();\n    }\n\n    initiateState = () => {\n        return {\n            loading: false,\n            initialGameNumber: '',\n            finalGameNumber: '',\n            gameNumberDuplicate: '',\n            gameToDuplicate: undefined,\n            ballsNumber: [\n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n        };\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n\n        const { initialGameNumber, finalGameNumber, ballsNumber } = this.state;\n\n        const ballsSelected = ballsNumber?.filter((ball: IBallState) => ball.checked);\n\n        console.log(ballsSelected);\n\n        var newGameRequest = {\n            initialGameNumber,\n            finalGameNumber,\n            numbersPlayed: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        const authToken = localStorage.getItem('AuthToken');\n\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n        try {\n            const { data } = await axios\n                .post('https://us-central1-overtlite.cloudfunctions.net/api/new-game', newGameRequest)\n\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n\n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball: IBallState) => ball.checked);\n\n        if (ballsSelected && ballsSelected?.length == 15 && currentChange) {\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if (ball.value == ballNumber.value) {\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ ballsNumber: currentBalls });\n    }\n\n    handleChange = (event: any) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        const authToken = localStorage.getItem('AuthToken');\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n        let allGames: Array<IGame> = [];\n\n        try {\n            const { data } = await axios.get('https://us-central1-overtlite.cloudfunctions.net/api/games-all');\n\n            const gamesQueued: IGame[] = _.chain(data)\n                .sortBy('gameNumber')\n                .value();\n\n            allGames.push.apply(allGames, gamesQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allGames });\n    }\n\n    handleDelete = async (game: IGame) => {\n        try {\n\n            this.setState({ loading: true });\n            await axios.delete(`https://us-central1-overtlite.cloudfunctions.net/api/game/${game.gameId}`);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    handleDuplicate = async (game: IGame) => {\n        this.setState({ gameToDuplicate: game });\n\n        this.modalState(true);\n    }\n\n    duplicateGame = async () => {\n        this.setState({ loading: true });\n\n        try {\n            const { gameToDuplicate, gameNumberDuplicate } = this.state;\n\n            if (gameToDuplicate == null) {\n                return;\n            }\n\n            var newGameRequest = {\n                initialGameNumber: gameNumberDuplicate,\n                finalGameNumber: gameNumberDuplicate,\n                numbersPlayed: gameToDuplicate.numbersPlayed\n            }\n\n            const authToken = localStorage.getItem('AuthToken');\n\n            axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n            const { data } = await axios\n                .post('https://us-central1-overtlite.cloudfunctions.net/api/new-game', newGameRequest)\n\n            await this.retrieveData();\n\n            this.modalState(false);\n\n            this.setState(this.initiateState());\n        } catch (error) {\n            this.setState({ loading: false });\n        }\n    }\n\n    modalState = async (state: boolean) => {\n        this.setState({ modalOpened: state, gameNumberDuplicate: '' });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { gameNumberDuplicate, loading, initialGameNumber, finalGameNumber, ballsNumber, errors, retrievedData, modalOpened } = this.state;\n\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        } else {\n            return (\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <form className={classes.formInput} noValidate autoComplete=\"off\">\n                                <div>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"initialGameNumber\"\n                                        id=\"initialGameNumber\"\n                                        label=\"Initial Game Number\"\n                                        value={initialGameNumber}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div>\n                                    <TextField\n                                        type=\"number\"\n                                        name=\"finalGameNumber\"\n                                        id=\"finalGameNumber\"\n                                        label=\"Final Game Number\"\n                                        value={finalGameNumber}\n                                        onChange={this.handleChange} />\n                                </div>\n                                <div className={classes.inputField}>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index > 8)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 9 || index > 17)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {\n                                            ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                                if (index < 18)\n                                                    return\n                                                return (<span\n                                                    key={ballNumber.value}\n                                                    className={ballNumber.checked ? classes.ballChecked : classes.ball}\n                                                    onClick={() => this.onClickBall(ballNumber)}\n                                                >{ballNumber.value}</span>)\n                                            })\n                                        }\n                                    </Typography>\n                                </div>\n\n                                <div className={classes.inputField}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={loading}\n                                        onClick={this.handleSubmit}>\n                                        Save\n                                </Button>\n                                </div>\n                                <div className={classes.inputField}>\n                                    {(\n                                        <Typography variant=\"body2\" className={classes.customError}>\n                                            {errors}\n                                        </Typography>\n                                    )}\n                                </div>\n                            </form>\n\n                        </CardContent>\n                    </Card>\n                    {\n                        retrievedData?.map((game: IGame) => {\n                            return (\n                                <Card className={classes.root} key={game.gameId}>\n                                    <CardContent>\n                                        <Grid container spacing={3} className={classes.cardHeader}>\n                                            <Grid item xs>\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                    Game: {game.gameNumber}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs>\n                                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleDelete(game)}>\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleDuplicate(game)}>\n                                                    <RefreshIcon />\n                                                </IconButton>\n                                            </Grid>\n                                        </Grid>\n\n                                        <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                            {\n                                                game.numbersPlayed.map((ballNumber: string, index: number) => {\n                                                    return (<span className={classes.ball} key={game.gameId + ballNumber}>{ballNumber}</span>)\n                                                })\n                                            }\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n\n                            )\n                        })\n                    }\n\n                    <Modal\n                        open={modalOpened ? modalOpened : false}\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                    >\n                        <div className={[classes.paper, classes.modalStyle].join(' ')}>\n\n                            <div>\n                                <TextField\n                                    type=\"number\"\n                                    name=\"gameNumberDuplicate\"\n                                    id=\"gameNumberDuplicate\"\n                                    label=\"Game Number\"\n                                    value={gameNumberDuplicate}\n                                    onChange={this.handleChange} />\n                            </div>\n\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.modalState(false)}>\n                                <CloseIcon />\n                            </IconButton>\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.duplicateGame()}>\n                                <SaveIcon />\n                            </IconButton>\n                        </div>\n                    </Modal>\n                </main>\n            )\n        }\n\n\n\n\n    }\n}\n\nexport default (withStyles(styles)(Game));","import React, { Component, useState } from 'react'\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Theme, createStyles, TextField, Button, CircularProgress, Grid, IconButton } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  import DeleteIcon from '@material-ui/icons/Delete';\n  import * as _ from 'lodash';\n\nconst styles = ((theme: Theme) => (\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        toolbar: theme.mixins.toolbar,\n        root: {\n            minWidth: 340,\n            marginBottom: 10\n        },\n        bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)',\n        },\n        title: {\n            fontSize: 18,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n        ball: {\n            backgroundColor: 'white',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'black',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        ballChecked: {\n            backgroundColor: 'green',\n            border: '1px solid',\n            borderRadius: 50,\n            padding: 2,\n            marginRight: 2,\n            color: 'white',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n        },\n        numbers: {\n            marginBottom: 10\n        },\n        formInput: {\n            marginBottom: 10,\n            marginRight: 5\n        },\n        ballsNumbers: {\n            marginTop: 20\n        },\n        inputField: {\n            marginTop: 10\n        },\n        customError: {\n            color: 'red',\n            fontSize: '0.8rem',\n            marginTop: 10\n        },\n        uiProgess: {\n            position: 'fixed',\n            Index: '1000',\n            height: '31px',\n            width: '31px',\n            left: '50%',\n            top: '35%'\n        },\n    }))\n);\n\ninterface IProps {\n    history?: Array<String>;\n    classes?: any;\n}\n\ninterface IState {\n    loading?: boolean;\n    ballsNumber?: Array<IBallState>,\n    drawNumber?: string,\n    drawDate?: Date | null,\n    errors?: Array<string> ,\n    retrievedData?: Array<IDraw>\n}\n\ninterface IBallState {\n    checked: boolean,\n    value: string\n}\n\ninterface IDraw {\n    drawNumber: string,\n    numbersDrawn: string[],\n    drawId: string,\n}\n\n\nclass NewDraw extends Component<IProps, IState> {\n    constructor(props: IProps) {\n\t\tsuper(props);\n\n\t\tthis.state = this.initiateState();\n    }\n\n    handleDateChange = (date: Date | null) => {\n        this.setState({drawDate: date});\n      };\n\n    initiateState = () => {\n        return {\n            loading: false,\n            drawNumber: '',\n            drawDate: new Date(),\n            ballsNumber:  [ \n                {\n                    value: \"01\",\n                    checked: false\n                },\n                {\n                    value: \"02\",\n                    checked: false\n                },\n                {\n                    value: \"03\",\n                    checked: false\n                },\n                {\n                    value: \"04\",\n                    checked: false\n                },\n                {\n                    value: \"05\",\n                    checked: false\n                },\n                {\n                    value: \"06\",\n                    checked: false\n                },\n                {\n                    value: \"07\",\n                    checked: false\n                },\n                {\n                    value: \"08\",\n                    checked: false\n                },\n                {\n                    value: \"09\",\n                    checked: false\n                },\n                {\n                    value: \"10\",\n                    checked: false\n                },\n                {\n                    value: \"11\",\n                    checked: false\n                },\n                {\n                    value: \"12\",\n                    checked: false\n                },\n                {\n                    value: \"13\",\n                    checked: false\n                },\n                {\n                    value: \"14\",\n                    checked: false\n                },\n                {\n                    value: \"15\",\n                    checked: false\n                },\n                {\n                    value: \"16\",\n                    checked: false\n                },\n                {\n                    value: \"17\",\n                    checked: false\n                },\n                {\n                    value: \"18\",\n                    checked: false\n                },\n                {\n                    value: \"19\",\n                    checked: false\n                },\n                {\n                    value: \"20\",\n                    checked: false\n                },\n                {\n                    value: \"21\",\n                    checked: false\n                },\n                {\n                    value: \"22\",\n                    checked: false\n                },\n                {\n                    value: \"23\",\n                    checked: false\n                },\n                {\n                    value: \"24\",\n                    checked: false\n                },\n                {\n                    value: \"25\",\n                    checked: false\n                }\n            ],\n            errors: []\n\t\t};\n    }\n\n    handleSubmit = async (event: any) => {\n        event.preventDefault();\n\n        const {drawNumber, drawDate, ballsNumber} = this.state;\n\n        if(drawNumber == null || Number(drawNumber) <= 0 || drawDate == null){\n            this.setState({errors: ['Inform the Game Number']});\n\n            return;\n        }\n\n        this.setState({ loading: true });\n\n        const ballsSelected = ballsNumber?.filter((ball:IBallState) =>  ball.checked);\n\n        console.log(ballsSelected);\n\n        var newDrawRequest = {\n            drawNumber,\n            drawDate,\n            numbersDrawn: ballsSelected?.map((ball: IBallState) => ball.value)\n        }\n\n        console.log(newDrawRequest);\n\n        const authToken = localStorage.getItem('AuthToken');\n\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\n\n        \n        try{\n            const {data} = await axios\n            .post('https://us-central1-overtlite.cloudfunctions.net/api/new-draw', newDrawRequest)\n           \n\n            this.setState(this.initiateState());\n        }catch(error){\n            //TODO dont get the field with wrong value \n            // this.setState({errors: [error.response.data]})\n            this.setState({ loading: false });\n        }\n       \n    }\n\n    onClickBall = (ballNumber: IBallState) => {\n        let currentChange: boolean = !ballNumber.checked;\n\n        let currentBalls: IBallState[] | undefined = this.state.ballsNumber;\n\n        const ballsSelected = currentBalls?.filter((ball:IBallState) =>  ball.checked);\n\n        if(ballsSelected && ballsSelected?.length == 15 && currentChange){\n            this.setState({\n                errors: [\n                    'Only 15 numbers'\n                ]\n            });\n\n            return;\n        }\n\n        this.setState({\n            errors: [\n            ]\n        });\n\n        currentBalls?.forEach((ball: IBallState) => {\n            if(ball.value == ballNumber.value){\n                ball.checked = currentChange;\n            }\n        })\n\n        this.setState({ballsNumber: currentBalls});\n    }\n\n    handleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n    };\n\n    componentWillMount = async () => {\n        this.retrieveData();\n    }\n\n    retrieveData = async () => {\n        const authToken = localStorage.getItem('AuthToken');\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\n\n        let allDraws: Array<IDraw> = [];\n\n        try {\n            const { data } = await axios.get('https://us-central1-overtlite.cloudfunctions.net/api/draws-all');\n\n            const drawsQueued: IDraw[] = _.chain(data)\n                .sortBy('drawNumber')\n                .value();\n\n                allDraws.push.apply(allDraws, drawsQueued);\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.setState({ retrievedData: allDraws });\n    }\n    \n    handleDelete = async (draw: IDraw) => {\n        try {\n\n            this.setState({ loading: true });\n            await axios.delete(`https://us-central1-overtlite.cloudfunctions.net/api/draw/${draw.drawId}`);\n\n            await this.retrieveData();\n\n            this.setState({ loading: false });\n        } catch (error) {\n            this.setState({ loading: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {  loading, drawNumber, drawDate, ballsNumber , errors, retrievedData} = this.state;\n        if (this.state.loading === true) {\n            return (\n                <div className={classes.root}>\n                    {this.state.loading && <CircularProgress size={150} className={classes.uiProgess} />}\n                </div>\n            );\n        }else{\n            return (\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <Card className={classes.root}>\n                    <CardContent>\n                        <form className={classes.formInput} noValidate autoComplete=\"off\">\n                            <div>\n                                <TextField \n                                    type=\"number\"\n                                    name=\"drawNumber\"\n                                    id=\"drawNumber\" \n                                    label=\"Draw Number\" \n                                    value={drawNumber}\n                                    onChange={this.handleChange}/>\n                            </div>\n                            <div>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                disableToolbar\n                                variant=\"inline\"\n                                format=\"dd/MM/yyyy\"\n                                margin=\"normal\"\n                                id=\"date-picker-inline\"\n                                label=\"Date picker inline\"\n                                value={drawDate}\n                                onChange={(value) =>  this.handleDateChange(value)}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                            </MuiPickersUtilsProvider>\n                            </div>\n                            <div className={classes.inputField}>\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                    {\n                                        ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                            if(index > 8)\n                                                return\n                                            return (<span \n                                            key={ballNumber.value}\n                                            className={ballNumber.checked ? classes.ballChecked : classes.ball }\n                                            onClick={() =>  this.onClickBall(ballNumber)}\n                                            >{ballNumber.value}</span>)\n                                        })\n                                    }\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                {\n                                        ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                            if(index < 9 || index > 17)\n                                                return\n                                            return (<span \n                                            key={ballNumber.value}\n                                            className={ballNumber.checked ? classes.ballChecked : classes.ball }\n                                            onClick={() =>  this.onClickBall(ballNumber)}\n                                            >{ballNumber.value}</span>)\n                                        })\n                                    }\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                {\n                                        ballsNumber?.map((ballNumber: IBallState, index: number) => {\n                                            if(index < 18)\n                                                return\n                                            return (<span \n                                            key={ballNumber.value}\n                                            className={ballNumber.checked ? classes.ballChecked : classes.ball }\n                                            onClick={() =>  this.onClickBall(ballNumber)}\n                                            >{ballNumber.value}</span>)\n                                        })\n                                    }\n                                </Typography>\n                            </div>\n\n                            <div className={classes.inputField}>\n                            <Button \n                                type=\"submit\" \n                                variant=\"contained\" \n                                color=\"primary\"\n                                disabled={loading}\n                                onClick={this.handleSubmit}>\n                                Save\n                            </Button>\n                            </div>\n                            <div className={classes.inputField}>\n                            { (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" className={classes.customError}>\n\t\t\t\t\t\t\t\t{errors}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n                            </div>\n                        </form>\n\n                    </CardContent>\n                </Card>\n            \n                {\n                        retrievedData?.map((game: IDraw) => {\n                            return (\n                                <Card className={classes.root} key={game.drawId}>\n                                    <CardContent>\n                                        <Grid container spacing={3} className={classes.cardHeader}>\n                                            <Grid item xs>\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                    Game: {game.drawNumber}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs>\n                                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleDelete(game)}>\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </Grid>\n                                        </Grid>\n    \n                                        <Typography variant=\"h5\" component=\"h2\" className={classes.numbers}>\n                                            {\n                                                game.numbersDrawn.map((ballNumber: string, index: number) => {\n                                                    return (<span className={classes.ball} key={game.drawId + ballNumber}>{ballNumber}</span>)\n                                                })\n                                            }\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            )\n                        })\n                    }\n            </main>\n        )}\n    }\n}\n\nexport default (withStyles(styles)(NewDraw));","import React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Card, CardActions, CardContent, Divider, Button, Grid, TextField, Theme, createStyles } from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport { authMiddleWare } from '../util/auth';\n\nconst styles = (theme: Theme) => (\n    createStyles({\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3)\n\t},\n\ttoolbar: theme.mixins.toolbar,\n\troot: {},\n\tdetails: {\n\t\tdisplay: 'flex'\n\t},\n\tavatar: {\n\t\theight: 110,\n\t\twidth: 100,\n\t\tflexShrink: 0,\n\t\tflexGrow: 0\n\t},\n\tlocationText: {\n\t\tpaddingLeft: '15px'\n\t},\n\tbuttonProperty: {\n\t\tposition: 'absolute',\n\t\ttop: '50%'\n\t},\n\tuiProgess: {\n\t\tposition: 'fixed',\n\t\tIndex: '1000',\n\t\theight: '31px',\n\t\twidth: '31px',\n\t\tleft: '50%',\n\t\ttop: '35%'\n\t},\n\tprogess: {\n\t\tposition: 'absolute'\n\t},\n\tuploadButton: {\n\t\tmarginLeft: '8px',\n\t\tmargin: theme.spacing(1)\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tsubmitButton: {\n\t\tmarginTop: '10px'\n\t}\n}));\n\ninterface IProps {\n    history?: Array<string>;\n    classes?: any;\n}\n\ninterface IState {\n    firstName?: String,\n    lastName?: String,\n    profilePicture?: String,\n    uiLoading?: boolean,\n    imageLoading?: boolean,\n    render?: boolean,\n    email?: String,\n    phoneNumber?: String,\n    country?: String,\n    username?:String,\n    errorMsg?:String,\n    buttonLoading?: boolean,\n    imageError?: String,\n    image?: string,\n    content?: string\n}\n\nclass account extends Component<IProps, IState> {\n\tconstructor(props: IProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\temail: '',\n\t\t\tphoneNumber: '',\n\t\t\tusername: '',\n\t\t\tcountry: '',\n\t\t\tprofilePicture: '',\n\t\t\tuiLoading: true,\n\t\t\tbuttonLoading: false,\n            imageError: ''\n    \t\t};\n\t}\n\n\tcomponentWillMount = () => {\n\t\tauthMiddleWare(this.props.history);\n\t\tconst authToken = localStorage.getItem('AuthToken');\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\n\t\taxios\n\t\t\t.get('/user')\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tfirstName: response.data.userCredentials.firstName,\n\t\t\t\t\tlastName: response.data.userCredentials.lastName,\n\t\t\t\t\temail: response.data.userCredentials.email,\n\t\t\t\t\tphoneNumber: response.data.userCredentials.phoneNumber,\n\t\t\t\t\tcountry: response.data.userCredentials.country,\n\t\t\t\t\tusername: response.data.userCredentials.username,\n\t\t\t\t\tuiLoading: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.response.status === 403) {\n\t\t\t\t\tthis.props.history?.push('/login');\n\t\t\t\t}\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.setState({ errorMsg: 'Error in retrieving the data' });\n\t\t\t});\n\t};\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\tupdateFormValues = (event: any) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ buttonLoading: true });\n\t\tauthMiddleWare(this.props.history);\n\t\tconst authToken = localStorage.getItem('AuthToken');\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\n\t\tconst formRequest = {\n\t\t\tfirstName: this.state.firstName,\n\t\t\tlastName: this.state.lastName,\n\t\t\tcountry: this.state.country\n\t\t};\n\t\taxios\n\t\t\t.post('/user', formRequest)\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({ buttonLoading: false });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.response.status === 403) {\n\t\t\t\t\tthis.props.history?.push('/login');\n\t\t\t\t}\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.setState({\n\t\t\t\t\tbuttonLoading: false\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes, ...rest } = this.props;\n\t\tif (this.state.uiLoading === true) {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t{this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n\t\t\t\t</main>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.locationText} gutterBottom variant=\"h4\">\n\t\t\t\t\t\t\t\t\t\t{this.state.firstName} {this.state.lastName}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.progress} />\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\n\t\t\t\t\t\t<form autoComplete=\"off\" noValidate>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.firstName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.lastName}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phoneNumber}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"userHandle\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"country\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.country}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardActions />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName={classes.submitButton}\n\t\t\t\t\t\tonClick={this.updateFormValues}\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\tthis.state.buttonLoading ||\n\t\t\t\t\t\t\t!this.state.firstName ||\n\t\t\t\t\t\t\t!this.state.lastName ||\n\t\t\t\t\t\t\t!this.state.country\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave details\n\t\t\t\t\t\t{this.state.buttonLoading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t</Button>\n\t\t\t\t</main>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default withStyles(styles)(account);","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Lottery from '../components/Lottery';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { authMiddleWare } from '../util/auth'\nimport { Theme, createStyles, BottomNavigationAction, BottomNavigation, Button } from '@material-ui/core';\nimport Game from '../components/Game';\nimport NewDraw from '../components/NewDraw';\nimport Account from './Account';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) => (\n    createStyles({\n\troot: {\n\t\tdisplay: 'flex'\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1\n\t},\n\tdrawer: {\n\t\twidth: drawerWidth,\n\t\tflexShrink: 0\n\t},\n\tdrawerPaper: {\n\t\twidth: drawerWidth\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3)\n\t},\n\tavatar: {\n\t\theight: 110,\n\t\twidth: 100,\n\t\tflexShrink: 0,\n\t\tflexGrow: 0,\n\t\tmarginTop: 20\n\t},\n\tuiProgess: {\n\t\tposition: 'fixed',\n\t\tIndex: '1000',\n\t\theight: '31px',\n\t\twidth: '31px',\n\t\tleft: '50%',\n\t\ttop: '35%'\n\t},\n\ttoolbar: theme.mixins.toolbar\n}));\n\ninterface IState {\n    firstName?: String,\n    lastName?: String,\n    profilePicture?: String,\n    uiLoading?: boolean,\n    imageLoading?: boolean,\n    render?: boolean,\n    email?: String,\n    phoneNumber?: String,\n    country?: String,\n    username?:String,\n\terrorMsg?:String,\n\tpageIndex?: number,\n\tleft?: boolean\n}\n\ninterface IProps {\n    history: Array<String>;\n    classes: any;\n}\n\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\nclass home extends Component<IProps, IState> {\n\tstate: IState = {\n\t\trender: true,\n\t\tpageIndex: 0\n\t};\n\n\tlogoutHandler = (event: any) => {\n\t\tlocalStorage.removeItem('AuthToken');\n\t\tthis.props.history.push('/login');\n\n\t\tthis.setState({left: false});\n\t};\n\n\tloadPage = (pageIndex: number)  =>{\n\t\tthis.setState({pageIndex : pageIndex, left: false});\n\t}\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\tprofilePicture: '',\n\t\t\tuiLoading: true,\n\t\t\timageLoading: false\n\t\t};\n\t}\n\n\tcomponentWillMount = () => {\n\t\tauthMiddleWare(this.props.history);\n\t\tconst authToken = localStorage.getItem('AuthToken');\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\n\t\taxios\n\t\t\t.get('https://us-central1-overtlite.cloudfunctions.net/api/user')\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tfirstName: response.data.userCredentials.firstName,\n\t\t\t\t\tlastName: response.data.userCredentials.lastName,\n\t\t\t\t\temail: response.data.userCredentials.email,\n\t\t\t\t\tphoneNumber: response.data.userCredentials.phoneNumber,\n\t\t\t\t\tcountry: response.data.userCredentials.country,\n\t\t\t\t\tusername: response.data.userCredentials.username,\n\t\t\t\t\tuiLoading: false,\n\t\t\t\t\tprofilePicture: response.data.userCredentials.imageUrl\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tif(error.response.status === 403) {\n\t\t\t\t\tthis.props.history.push('/login')\n\t\t\t\t}\n\t\t\t\tthis.setState({ errorMsg: 'Error in retrieving the data' });\n\t\t\t});\n\t};\n\n\t toggleDrawer = (anchor: Anchor, open: boolean) => (\n\t\tevent: React.KeyboardEvent | React.MouseEvent,\n\t  ) => {\n\n\t\tif (\n\t\t  event.type === 'keydown' &&\n\t\t  ((event as React.KeyboardEvent).key === 'Tab' ||\n\t\t\t(event as React.KeyboardEvent).key === 'Shift')\n\t\t) {\n\t\t  return;\n\t\t}\n\t\t\n\t\tthis.setState({...this.state, [anchor]: open})\n\t  };\n\n\trender() {\n\t\tconst { classes } = this.props;\t\t\n\t\tconst {pageIndex, left} = this.state;\n\t\tif (this.state.uiLoading === true) {\n\t\t\treturn (\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t{this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={classes.root} >\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Button onClick={this.toggleDrawer(\"left\", true)}>Menu</Button>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\t\t\tOvert Lite\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclassName={classes.drawer}\n\t\t\t\t\t\tanchor=\"left\"\n\t\t\t\t\t\topen={left}\n\t\t\t\t\t\tonClose={() => this.toggleDrawer('left', false)}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t{this.state.firstName} {this.state.lastName}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<ListItem button key=\"Lottery\" onClick={() =>  this.loadPage(0)}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Lottery\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem button key=\"NewDraw\" onClick={() =>  this.loadPage(2)}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"New Draw\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem button key=\"NewGame\" onClick={() =>  this.loadPage(1)}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"New Game\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem button key=\"Account\" onClick={() =>  this.loadPage(3)}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<AccountBoxIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Account\" />\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem button key=\"Logout\" onClick={this.logoutHandler}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<ExitToAppIcon />{' '}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Logout\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Drawer>\n\n\t\t\t\t\t<div>{\n\t\t\t\t\t\tpageIndex == 0 ? <Lottery /> \n\t\t\t\t\t\t\t: pageIndex == 1 ? <Game />\n\t\t\t\t\t\t\t: pageIndex == 2 ? <NewDraw />\n\t\t\t\t\t\t\t: pageIndex == 3 ? <Account />\n\t\t\t\t\t\t\t: <Lottery />\n\t\t\t\t\t\t}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default withStyles(styles)(home);","import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport axios from 'axios';\nimport { Theme, createStyles } from '@material-ui/core';\n\ninterface User {\n    email: String;\n    password: String;\n}\n\ninterface Error {\n    password?: String;\n    email?: String;\n    general?: String;\n}\n\ninterface IState {\n\temail?: String;\n\tpassword?: String;\n    errors?: Error;\n    loading?: boolean;\n}\n\ninterface IProps {\n    history: Array<String>;\n    classes: any;\n}\n\nconst styles = (theme: Theme) => (\n    createStyles({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: theme.spacing(1)\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2)\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogess: {\n\t\tposition: 'absolute'\n\t}\n}));\n\nclass login extends Component<IProps, IState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n            password: '',\n\t\t\terrors: {},\n\t\t\tloading: false\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps: any) {\n\t\tif (nextProps?.UI?.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.UI.errors\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChange = (event: any) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = (event: { preventDefault: () => void; }) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ loading: true });\n\t\tconst userData: User = {\n\t\t\temail: this.state.email ? this.state.email : '',\n\t\t\tpassword: this.state.password ? this.state.password : ''\n\t\t};\n\t\taxios\n\t\t\t.post('https://us-central1-overtlite.cloudfunctions.net/api/login', userData)\n\t\t\t.then((response) => {\n\t\t\t\tlocalStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\n\t\t\t\tthis.setState({ \n\t\t\t\t\tloading: false,\n\t\t\t\t});\t\t\n\t\t\t\tthis.props.history.push('/');\n\t\t\t})\n\t\t\t.catch((error) => {\t\t\n\t\t\t\t\n\t\t\t\tif(error.response != null){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terrors: error.response.data,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { errors, loading } = this.state;\n\t\treturn (\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\thelperText={errors?.email}\n\t\t\t\t\t\t\terror={errors?.email ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\thelperText={errors?.password}\n\t\t\t\t\t\t\terror={errors?.password ? true : false}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\tdisabled={loading || !this.state.email || !this.state.password}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Link href=\"signup\" variant=\"body2\">\n\t\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{errors?.general && (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" className={classes.customError}>\n\t\t\t\t\t\t\t\t{errors?.general}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(login);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport home from './pages/Home';\nimport Login from './pages/Login';\nimport Account from './pages/Account';\n\nfunction App() {\n  return <Router>\n  <div>\n     <Switch>\n         <Route exact path=\"/\" component={home}/>\n         <Route exact path=\"/login\" component={Login}/>\n         <Route exact path=\"/account\" component={Account}/>\n     </Switch>\n  </div>\n</Router>;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}